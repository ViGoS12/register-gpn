{"version":3,"sources":["components/backend.js","components/inputcomponent.jsx","components/_inputemail.jsx","components/inputsendbtn.jsx","components/_inputfullname.jsx","components/_inputshortname.jsx","components/_inputkpp.jsx","components/_inputinn.jsx","components/_inputogrn.jsx","components/_inputoktmo.jsx","components/_inputtokenreg.jsx","components/_inputtoken.jsx","components/_inputemailorg.jsx","components/_inputphoneorg.jsx","components/_inputregnum.jsx","components/_inputusername.jsx","components/_inputusersecondname.jsx","components/_inputusershurname.jsx","components/_inputcategory.jsx","components/_inputcheckpersdata.jsx","components/inputcaptcha.jsx","components/messagewindow.jsx","components/_regform.jsx","components/progressindicator.jsx","components/_registerpage.jsx","App.js","serviceWorker.js","index.js"],"names":["Backend","XMLHttpFactories","XMLHttpRequest","window","ActiveXObject","url","callbackI18n","xhr","this","createXHR","open","send","onreadystatechange","readyState","status","console","log","statusText","JSON","parse","responseText","oForm","onResponse","onUpdateProgress","onError","require","oData","FormData","fullNameEncoded","encodeURI","get","emailEncoded","categoryEncoded","innEncoded","kppEncoded","ogrnEncoded","oktmoEncoded","shortNameEncoded","tokenEncoded","userNameEncoded","userSecondNameEncoded","userSurenameEncoded","regNameEncoded","phoneOrgEncoded","emailOrgEncoded","append","upload","addEventListener","sToken","body","encodeURIComponent","setRequestHeader","xmlhttp","i","length","e","InputComponent","inputField","changeClass","element","oldClass","newClass","classList","remove","add","Component","InputEmail","handleChange","props","onChange","validateValue","target","input","email","value","result","test","String","toLowerCase","setValid","setInvalid","onValidate","className","type","id","name","placeholder","required","stylename","invalidMessage","InputSendBtn","Fragment","Button","color","size","block","caption","InputFullname","minLen","shouldHide","label","InputShortname","InputKpp","maxLength","maxLen","InputInn","InputOgrn","InputOktmo","InputTokenRegCheckbox","handleModalToggle","handleModal","modalTitle","modalText","checked","htmlFor","href","onClick","aboutLink","InputToken","InputEmailOrg","InputPhoneOrg","InputRegNum","InputUserName","InputUserSecondName","InputUserSurname","InputCategory","Inputcheckpersdata","items","map","item","key","text","Number","parseInt","InputCaptcha","state","backend","oResult","response","captchaPassed","event","index","src","indexOf","slice","Date","getTime","alt","handleImageClick","MessageWindow","backdrop","Modal","isOpen","modal","toggle","ModalHeader","title","ModalBody","dangerouslySetInnerHTML","__html","ModalFooter","RegForm","form","React","createRef","category","tokenReg","token","userName","userSecondName","userSurname","checkpersdata","fullName","shortName","kpp","inn","ogrn","oktmo","emailOrg","phoneOrg","regNum","checkCode","validate","fullname","handleChanges","setState","current","handleSubmit","preventDefault","onSubmit","handleValidate","param","isValid","i18n","Form","noValidate","innerRef","Row","Col","md","order","Card","style","marginBottom","CardBody","userHeader","formFields","validation","emptyValue","organizationHeader","infoMessage","textPD","captcha","emptyOrIncorrect","btnSend","ProgressIndicator","role","aria-valuenow","aria-valuemin","aria-valuemax","width","RegisterPage","asyncSubmit","handleResponse","handleProgress","handleError","oResponse","exceptionMessage","alertText","alertColor","alertVisible","requestCategory","lengthComputable","percentage","Math","round","loaded","total","progress","httpError","errors","handleResponseTokenVerify","headtext","onDismissAlert","headText","undefined","tokenVerified","search","location","URLSearchParams","ie","version","verifyToken","asyncSubmitVerifyToken","Alert","tokenFromEmailValidPage","success","outline","assign","error","content","oldBrowser","tokenFromEmailNotValidPage","Spinner","App","hostname","i18n_ru","getI18n","oI18n","document","register","updateI18n","Boolean","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d7ba710b.chunk.js","sourcesContent":["class Backend {\r\n  XMLHttpFactories = [\r\n    () => {\r\n      return new XMLHttpRequest();\r\n    },\r\n    () => {\r\n      return new window.ActiveXObject(\"Msxml2.XMLHTTP\");\r\n    },\r\n    () => {\r\n      return new window.ActiveXObject(\"Msxml3.XMLHTTP\");\r\n    },\r\n    () => {\r\n      return new window.ActiveXObject(\"Microsoft.XMLHTTP\");\r\n    }\r\n  ];\r\n\r\n  getI18n(url, callbackI18n) {\r\n    const xhr = this.createXHR();\r\n    xhr.open(\"GET\", url, true);\r\n    xhr.send();\r\n\r\n    xhr.onreadystatechange = () => {\r\n      if (xhr.readyState !== 4) {\r\n        return false;\r\n      }\r\n\r\n      if (xhr.status !== 200) {\r\n        console.log(xhr.status + \": \" + xhr.statusText);\r\n      } else {\r\n        callbackI18n(JSON.parse(xhr.responseText));\r\n      }\r\n    };\r\n  }\r\n\r\n  asyncSubmit(oForm, url, onResponse, onUpdateProgress, onError) {\r\n    const xhr = this.createXHR();\r\n    require(\"formdata-polyfill\");\r\n    let oData = new FormData(oForm);\r\n\r\n    const fullNameEncoded = encodeURI(oData.get(\"fullName\"));\r\n    const emailEncoded = encodeURI(oData.get(\"email\"));\r\n    const categoryEncoded = encodeURI(oData.get(\"category\") === 'on' ? 1 : 0 );\r\n    //const egrulEncoded = encodeURI(oData.get(\"egrul\"));\r\n    const innEncoded = encodeURI(oData.get(\"inn\"));\r\n    const kppEncoded = encodeURI(oData.get(\"kpp\"));\r\n    const ogrnEncoded = encodeURI(oData.get(\"ogrn\"));\r\n    const oktmoEncoded = encodeURI(oData.get(\"oktmo\"));\r\n    const shortNameEncoded = encodeURI(oData.get(\"shortName\"));\r\n    const tokenEncoded = encodeURI(oData.get(\"token\"));\r\n    const userNameEncoded = encodeURI(oData.get(\"userName\"));\r\n    const userSecondNameEncoded = encodeURI(oData.get(\"userSecondName\"));\r\n    const userSurenameEncoded = encodeURI(oData.get(\"userSurname\"));\r\n    const regNameEncoded = encodeURI(oData.get(\"regNum\")); //norezident\r\n    const phoneOrgEncoded = encodeURI(oData.get(\"phoneOrg\"));\r\n    const emailOrgEncoded = encodeURI(oData.get(\"emailOrg\"));\r\n    //const messageEncoded = encodeURI(oData.get(\"message\"));\r\n    //const adressEncoded = encodeURI(oData.get(\"adress\"));\r\n    //const adressEngEncoded = encodeURI(oData.get(\"adressEng\"));\r\n    //const nameEngEncoded = encodeURI(oData.get(\"nameEng\"));\r\n\r\n    oData.append(\"fullNameEncoded\", fullNameEncoded);\r\n    oData.append(\"emailEncoded\", emailEncoded);\r\n    oData.append(\"categoryEncoded\", categoryEncoded);\r\n    //oData.append(\"egrulEncoded\", egrulEncoded);\r\n    oData.append(\"innEncoded\", innEncoded);\r\n    oData.append(\"kppEncoded\", kppEncoded);\r\n    oData.append(\"ogrnEncoded\", ogrnEncoded);\r\n    oData.append(\"oktmoEncoded\", oktmoEncoded);\r\n    oData.append(\"shortNameEncoded\", shortNameEncoded);\r\n    oData.append(\"tokenEncoded\", tokenEncoded);\r\n    oData.append(\"userNameEncoded\", userNameEncoded);\r\n    oData.append(\"userSecondNameEncoded\", userSecondNameEncoded);\r\n    oData.append(\"userSurenameEncoded\", userSurenameEncoded);\r\n    oData.append(\"regNameEncoded\", regNameEncoded);\r\n    oData.append(\"phoneOrgEncoded\", phoneOrgEncoded);\r\n    oData.append(\"emailOrgEncoded\", emailOrgEncoded);\r\n    //oData.append(\"messageEncoded\", messageEncoded);\r\n    //oData.append(\"adressEncoded\", adressEncoded);\r\n    //oData.append(\"adressEngEncoded\", adressEngEncoded);\r\n    //oData.append(\"nameEngEncoded\", nameEngEncoded);\r\n\r\n    xhr.open(\"POST\", url, true);\r\n    xhr.upload.addEventListener(\"progress\", onUpdateProgress, false);\r\n\r\n    xhr.send(oData);\r\n    xhr.onreadystatechange = () => {\r\n      console.log(xhr.status);\r\n      if (xhr.readyState !== 4) {\r\n        return false;\r\n      }\r\n\r\n      if (xhr.status !== 200) {\r\n        onError(xhr.status);\r\n      } else {\r\n        onResponse(JSON.parse(xhr.responseText));\r\n      }\r\n    };\r\n  }\r\n\r\n  asyncSubmitVerifyToken(sToken, url, onResponse, onError) {\r\n    const xhr = this.createXHR();\r\n    \r\n    //let oData = JSON.stringify({\"token\": sToken});\r\n    // xhr.open(\"POST\", url, true);\r\n    // xhr.setRequestHeader('Content-type', 'application/json; charset=utf-8');\r\n    // xhr.send(oData);\r\n\r\n    var body = 'token=' + encodeURIComponent(sToken);\r\n    xhr.open(\"POST\", url, true);\r\n    xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\r\n    xhr.send(body);\r\n\r\n    xhr.onreadystatechange = () => {\r\n      console.log(xhr.status);\r\n      if (xhr.readyState !== 4) {\r\n        return false;\r\n      }\r\n\r\n      if (xhr.status !== 200) {\r\n        onError(xhr.status);\r\n      } else {\r\n        onResponse(xhr.responseText);\r\n        //onResponse(JSON.parse(xhr.responseText));\r\n      }\r\n    };\r\n  }\r\n\r\n\r\n  createXHR() {\r\n    let xmlhttp = false;\r\n    for (let i = 0; i < this.XMLHttpFactories.length; i++) {\r\n      try {\r\n        xmlhttp = this.XMLHttpFactories[i]();\r\n      } catch (e) {\r\n        continue;\r\n      }\r\n      break;\r\n    }\r\n    return xmlhttp;\r\n  }\r\n}\r\nexport default Backend;\r\n","import { Component } from \"react\";\r\n\r\nclass InputComponent extends Component {\r\n  setInvalid(inputField) {\r\n    this.changeClass(inputField, \"is-valid\", \"is-invalid\");\r\n  }\r\n\r\n  setValid(inputField) {\r\n    this.changeClass(inputField, \"is-invalid\", \"is-valid\");\r\n  }\r\n\r\n  changeClass(element, oldClass, newClass) {\r\n    try {\r\n      element.classList.remove(oldClass);\r\n      element.classList.add(newClass);\r\n    } catch (e) {\r\n      console.log(\"Exception [changeClass]\", e);\r\n    }\r\n  }\r\n}\r\n\r\nexport default InputComponent;\r\n","import React from \"react\";\r\nimport InputComponent from \"./inputcomponent\";\r\n\r\nclass InputEmail extends InputComponent {\r\n  handleChange = e => {\r\n    // fire the form change event\r\n    this.props.onChange(e);\r\n    this.validateValue(e.target);\r\n  };\r\n\r\n  validateValue(input) {\r\n    const re = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n    const email = input.value;\r\n    let result = false;\r\n\r\n    if (re.test(String(email).toLowerCase())) {\r\n      result = true;\r\n      this.setValid(input);\r\n    } else {\r\n      this.setInvalid(input);\r\n    }\r\n    console.log(\"validateEmail:\" + result);\r\n    this.props.onValidate(result);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"mb-3\">\r\n        {/* <label htmlFor=\"email\">{this.props.label}</label> */}\r\n        <div className=\"input-group\">\r\n          <div className=\"input-group-prepend\">\r\n            <span className=\"input-group-text\">@</span>\r\n          </div>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"email\"\r\n            name=\"email\"\r\n            placeholder={this.props.placeholder}\r\n            onChange={this.handleChange}\r\n            value={this.props.value}\r\n            required\r\n          />\r\n          <div className=\"invalid-feedback\" stylename=\"width: 100%\">\r\n            {this.props.invalidMessage}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InputEmail;\r\n","import React, { Component } from \"react\";\r\nimport { Button } from \"reactstrap\";\r\n\r\nclass InputSendBtn extends Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Button color=\"primary\" size=\"lg\" block>\r\n          {this.props.caption}\r\n        </Button>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InputSendBtn;\r\n","import React from \"react\";\r\nimport InputComponent from \"./inputcomponent\";\r\n\r\nclass InputFullname extends InputComponent {\r\n  handleChange = e => {\r\n    // fire the form change event\r\n    this.props.onChange(e);\r\n    this.validateValue(e.target);\r\n  };\r\n\r\n  validateValue(input) {\r\n    let result = false;\r\n    const minLen = this.props.minLen;\r\n    const value = input.value;\r\n\r\n    if (value && value.length >= minLen) {\r\n      result = true;\r\n      this.setValid(input);\r\n    } else {\r\n      this.setInvalid(input);\r\n    }\r\n    this.props.onValidate(result);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={this.props.shouldHide ? 'mb-3 hidden' : 'mb-3'} >\r\n        {/* <label htmlFor=\"fullName\">{this.props.label}</label> */}\r\n        <div className=\"floating-label-group\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"fullName\"\r\n            name=\"fullName\"\r\n            required\r\n            onChange={this.handleChange}\r\n            value={this.props.value}\r\n          />\r\n          <span className=\"floating-label\">{this.props.label}</span>\r\n          <div className=\"invalid-feedback\" stylename=\"width: 100%\">\r\n            {this.props.invalidMessage}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InputFullname;\r\n","import React from \"react\";\r\nimport InputComponent from \"./inputcomponent\";\r\n\r\nclass InputShortname extends InputComponent {\r\n  handleChange = e => {\r\n    // fire the form change event\r\n    this.props.onChange(e);\r\n    this.validateValue(e.target);\r\n  };\r\n\r\n  validateValue(input) {\r\n    let result = false;\r\n    const minLen = this.props.minLen;\r\n    const value = input.value;\r\n\r\n    if (value && value.length >= minLen) {\r\n      result = true;\r\n      this.setValid(input);\r\n    } else {\r\n      this.setInvalid(input);\r\n    }\r\n    this.props.onValidate(result);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={this.props.shouldHide ? 'mb-3 hidden' : 'mb-3'} >\r\n        {/* <label htmlFor=\"shortName\">{this.props.label}</label> */}\r\n        <div className=\"floating-label-group\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"shortName\"\r\n            name=\"shortName\"\r\n            required\r\n            onChange={this.handleChange}\r\n            value={this.props.value}\r\n          />\r\n          <span className=\"floating-label\">{this.props.label}</span>\r\n          <div className=\"invalid-feedback\" stylename=\"width: 100%\">\r\n            {this.props.invalidMessage}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InputShortname;\r\n","import React from \"react\";\r\nimport InputComponent from \"./inputcomponent\";\r\n\r\nclass InputKpp extends InputComponent {\r\n  handleChange = e => {\r\n    // fire the form change event\r\n    this.props.onChange(e);\r\n    this.validateValue(e.target);\r\n  };\r\n\r\n  validateValue(input) {\r\n    let result = false;\r\n    const minLen = this.props.minLen;\r\n    const value = input.value;\r\n\r\n    if (value && value.length >= minLen) {\r\n      result = true;\r\n      this.setValid(input);\r\n    } else {\r\n      this.setInvalid(input);\r\n    }\r\n    this.props.onValidate(result);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={this.props.shouldHide ? 'mb-3 hidden' : 'mb-3'} >\r\n        {/* <label htmlFor=\"kpp\">{this.props.label}</label> */}\r\n        <div className=\"floating-label-group\">\r\n          <input\r\n            type=\"number\"\r\n            className=\"form-control\"\r\n            id=\"kpp\"\r\n            name=\"kpp\"\r\n            required\r\n            onChange={this.handleChange}\r\n            value={this.props.value}\r\n            maxLength={this.props.maxLen}\r\n          />\r\n          <span className=\"floating-label\">{this.props.label}</span>\r\n          <div className=\"invalid-feedback\" stylename=\"width: 100%\">\r\n            {this.props.invalidMessage}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InputKpp;\r\n","import React from \"react\";\r\nimport InputComponent from \"./inputcomponent\";\r\n\r\nclass InputInn extends InputComponent {\r\n  handleChange = e => {\r\n    // fire the form change event\r\n    this.props.onChange(e);\r\n    this.validateValue(e.target);\r\n  };\r\n\r\n  validateValue(input) {\r\n    let result = false;\r\n    const minLen = this.props.minLen;\r\n    const value = input.value;\r\n\r\n    if (value && value.length >= minLen) {\r\n      result = true;\r\n      this.setValid(input);\r\n    } else {\r\n      this.setInvalid(input);\r\n    }\r\n    this.props.onValidate(result);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={this.props.shouldHide ? 'mb-3 hidden' : 'mb-3'} >\r\n        {/* <label htmlFor=\"inn\">{this.props.label}</label> */}\r\n        <div className=\"floating-label-group\">\r\n          <input\r\n            type=\"number\"\r\n            className=\"form-control\"\r\n            id=\"inn\"\r\n            name=\"inn\"\r\n            required\r\n            onChange={this.handleChange}\r\n            value={this.props.value}\r\n            maxLength={this.props.maxLen}\r\n          />\r\n          <span className=\"floating-label\">{this.props.label}</span>\r\n          <div className=\"invalid-feedback\" stylename=\"width: 100%\">\r\n            {this.props.invalidMessage}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InputInn;\r\n","import React from \"react\";\r\nimport InputComponent from \"./inputcomponent\";\r\n\r\nclass InputOgrn extends InputComponent {\r\n  handleChange = e => {\r\n    // fire the form change event\r\n    this.props.onChange(e);\r\n    this.validateValue(e.target);\r\n  };\r\n\r\n  validateValue(input) {\r\n    let result = false;\r\n    const minLen = this.props.minLen;\r\n    const value = input.value;\r\n\r\n    if (value && value.length >= minLen) {\r\n      result = true;\r\n      this.setValid(input);\r\n    } else {\r\n      this.setInvalid(input);\r\n    }\r\n    this.props.onValidate(result);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={this.props.shouldHide ? 'mb-3 hidden' : 'mb-3'} >\r\n        {/* <label htmlFor=\"ogrn\">{this.props.label}</label> */}\r\n        <div className=\"floating-label-group\">\r\n          <input\r\n            type=\"number\"\r\n            className=\"form-control\"\r\n            id=\"ogrn\"\r\n            name=\"ogrn\"\r\n            required\r\n            onChange={this.handleChange}\r\n            value={this.props.value}\r\n            maxLength={this.props.maxLen}\r\n          />\r\n          <span className=\"floating-label\">{this.props.label}</span>\r\n          <div className=\"invalid-feedback\" stylename=\"width: 100%\">\r\n            {this.props.invalidMessage}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InputOgrn;\r\n","import React from \"react\";\r\nimport InputComponent from \"./inputcomponent\";\r\n\r\nclass InputOktmo extends InputComponent {\r\n  handleChange = e => {\r\n    // fire the form change event\r\n    this.props.onChange(e);\r\n    this.validateValue(e.target);\r\n  };\r\n\r\n  validateValue(input) {\r\n    let result = false;\r\n    const minLen = this.props.minLen;\r\n    const value = input.value;\r\n\r\n    if (value && value.length >= minLen) {\r\n      result = true;\r\n      this.setValid(input);\r\n    } else {\r\n      this.setInvalid(input);\r\n    }\r\n    this.props.onValidate(result);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={this.props.shouldHide ? 'mb-3 hidden' : 'mb-3'} >\r\n        {/* <label htmlFor=\"oktmo\">{this.props.label}</label> */}\r\n        <div className=\"floating-label-group\">\r\n          <input\r\n            type=\"number\"\r\n            className=\"form-control\"\r\n            id=\"oktmo\"\r\n            name=\"oktmo\"\r\n            required\r\n            onChange={this.handleChange}\r\n            value={this.props.value}\r\n            maxLength={this.props.maxLen}\r\n          />\r\n          <span className=\"floating-label\">{this.props.label}</span>\r\n          <div className=\"invalid-feedback\" stylename=\"width: 100%\">\r\n            {this.props.invalidMessage}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InputOktmo;\r\n","import React from \"react\";\r\nimport InputComponent from \"./inputcomponent\";\r\n//import { UncontrolledPopover, PopoverHeader, PopoverBody } from 'reactstrap';\r\n\r\nclass InputTokenRegCheckbox extends InputComponent {\r\n  handleChange = e => {\r\n    // fire the form change event\r\n    this.props.onChange(e);\r\n    //this.validateValue();\r\n  };\r\n\r\n  // validateValue = () => {\r\n  //   this.props.onValidate(true);\r\n  // };\r\n\r\n  handleModalToggle = () => {\r\n    this.props.handleModal(this.props.modalTitle,this.props.modalText);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"d-block my-3\">\r\n            <div className=\"custom-control custom-switch\">\r\n              <input\r\n                id=\"tokenReg\"\r\n                name=\"tokenReg\"\r\n                type=\"checkbox\"\r\n                checked={this.props.value}\r\n                className=\"form-control custom-control-input\"\r\n                onChange={this.handleChange}\r\n              />\r\n\r\n              <label className=\"custom-control-label\" htmlFor=\"tokenReg\">\r\n                {this.props.label}\r\n              </label>\r\n\r\n              {\". \"}\r\n              <a href=\"javascript:void(null);\" onClick={this.handleModalToggle}>{this.props.aboutLink}</a>\r\n    \r\n            </div>\r\n          \r\n          {/* <div className=\"text-muted\">\r\n            {this.props.infoMessage}\r\n          </div> */}\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InputTokenRegCheckbox;\r\n","import React from \"react\";\r\nimport InputComponent from \"./inputcomponent\";\r\n\r\nclass InputToken extends InputComponent {\r\n  handleChange = e => {\r\n    // fire the form change event\r\n    this.props.onChange(e);\r\n    this.validateValue(e.target);\r\n  };\r\n\r\n  validateValue(input) {\r\n    let result = false;\r\n    const minLen = this.props.minLen;\r\n    const value = input.value;\r\n\r\n    if (value && value.length >= minLen) {\r\n      result = true;\r\n      this.setValid(input);\r\n    } else {\r\n      this.setInvalid(input);\r\n    }\r\n    this.props.onValidate(result);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={this.props.shouldHide ? 'mb-3 hidden' : 'mb-3'} >\r\n        {/* <label htmlFor=\"egrul\">{this.props.label}</label> */}\r\n        <div className=\"floating-label-group\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"token\"\r\n            name=\"token\"\r\n            onChange={this.handleChange}\r\n            value={this.props.value}\r\n            required={this.props.required} \r\n          />\r\n          {/* required */}\r\n          <span className=\"floating-label\">{this.props.label}</span>\r\n          <div className=\"invalid-feedback\" stylename=\"width: 100%\">\r\n            {this.props.invalidMessage}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InputToken;\r\n","import React from \"react\";\r\nimport InputComponent from \"./inputcomponent\";\r\n\r\nclass InputEmailOrg extends InputComponent {\r\n  handleChange = e => {\r\n    // fire the form change event\r\n    this.props.onChange(e);\r\n    this.validateValue(e.target);\r\n  };\r\n\r\n  validateValue(input) {\r\n    const re = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n    const email = input.value;\r\n    let result = false;\r\n\r\n    if (re.test(String(email).toLowerCase())) {\r\n      result = true;\r\n      this.setValid(input);\r\n    } else {\r\n      this.setInvalid(input);\r\n    }\r\n    console.log(\"validateEmailOrg:\" + result);\r\n    this.props.onValidate(result);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"mb-3\">\r\n        {/* <label htmlFor=\"emailOrg\">{this.props.label}</label> */}\r\n        <div className=\"input-group\">\r\n          <div className=\"input-group-prepend\">\r\n            <span className=\"input-group-text\">@</span>\r\n          </div>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"emailOrg\"\r\n            name=\"emailOrg\"\r\n            placeholder={this.props.placeholder}\r\n            onChange={this.handleChange}\r\n            value={this.props.value}\r\n            required\r\n          />\r\n          <div className=\"invalid-feedback\" stylename=\"width: 100%\">\r\n            {this.props.invalidMessage}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InputEmailOrg;\r\n","import React from \"react\";\r\nimport InputComponent from \"./inputcomponent\";\r\n\r\nclass InputPhoneOrg extends InputComponent {\r\n  handleChange = e => {\r\n    // fire the form change event\r\n    this.props.onChange(e);\r\n    this.validateValue(e.target);\r\n  };\r\n\r\n  validateValue(input) {\r\n    let result = false;\r\n    const minLen = this.props.minLen;\r\n    const value = input.value;\r\n\r\n    if (value && value.length >= minLen) {\r\n      result = true;\r\n      this.setValid(input);\r\n    } else {\r\n      this.setInvalid(input);\r\n    }\r\n    this.props.onValidate(result);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={this.props.shouldHide ? 'mb-3 hidden' : 'mb-3'} >\r\n        {/* <label htmlFor=\"phoneOrg\">{this.props.label}</label> */}\r\n        <div className=\"floating-label-group\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"phoneOrg\"\r\n            name=\"phoneOrg\"\r\n            required\r\n            onChange={this.handleChange}\r\n            value={this.props.value}\r\n          />\r\n\r\n          <span className=\"floating-label\">{this.props.label}</span>\r\n          <div className=\"invalid-feedback\" stylename=\"width: 100%\">\r\n            {this.props.invalidMessage}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InputPhoneOrg;\r\n","import React from \"react\";\r\nimport InputComponent from \"./inputcomponent\";\r\n\r\nclass InputRegNum extends InputComponent {\r\n  handleChange = e => {\r\n    // fire the form change event\r\n    this.props.onChange(e);\r\n    this.validateValue(e.target);\r\n  };\r\n\r\n  validateValue(input) {\r\n    let result = false;\r\n    const minLen = this.props.minLen;\r\n    const value = input.value;\r\n\r\n    if (value && value.length >= minLen) {\r\n      result = true;\r\n      this.setValid(input);\r\n    } else {\r\n      this.setInvalid(input);\r\n    }\r\n    this.props.onValidate(result);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={this.props.shouldHide ? 'mb-3 hidden' : 'mb-3'} >\r\n        {/* <label htmlFor=\"regNum\">{this.props.label}</label> */}\r\n        <div className=\"floating-label-group\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"regNum\"\r\n            name=\"regNum\"\r\n            required\r\n            onChange={this.handleChange}\r\n            value={this.props.value}\r\n            maxLength={this.props.maxLen}\r\n          />\r\n          <span className=\"floating-label\">{this.props.label}</span>\r\n          <div className=\"invalid-feedback\" stylename=\"width: 100%\">\r\n            {this.props.invalidMessage}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InputRegNum;\r\n","import React from \"react\";\r\nimport InputComponent from \"./inputcomponent\";\r\n\r\nclass InputUserName extends InputComponent {\r\n  handleChange = e => {\r\n    // fire the form change event\r\n    this.props.onChange(e);\r\n    this.validateValue(e.target);\r\n  };\r\n\r\n  validateValue(input) {\r\n    let result = false;\r\n    const minLen = this.props.minLen;\r\n    const value = input.value;\r\n\r\n    if (value && value.length >= minLen) {\r\n      result = true;\r\n      this.setValid(input);\r\n    } else {\r\n      this.setInvalid(input);\r\n    }\r\n    this.props.onValidate(result);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={this.props.shouldHide ? 'mb-3 hidden' : 'mb-3'} >\r\n        {/* <label htmlFor=\"userName\">{this.props.label}</label> */}\r\n        <div className=\"floating-label-group\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"userName\"\r\n            name=\"userName\"\r\n            onChange={this.handleChange}\r\n            value={this.props.value}\r\n            maxLength={this.props.maxLen}\r\n            required\r\n          />\r\n          <span className=\"floating-label\">{this.props.label}</span>\r\n          <div className=\"invalid-feedback\" stylename=\"width: 100%\">\r\n            {this.props.invalidMessage}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InputUserName;\r\n","import React from \"react\";\r\nimport InputComponent from \"./inputcomponent\";\r\n\r\nclass InputUserSecondName extends InputComponent {\r\n  handleChange = e => {\r\n    // fire the form change event\r\n    this.props.onChange(e);\r\n    this.validateValue(e.target);\r\n  };\r\n\r\n  validateValue(input) {\r\n    let result = false;\r\n    const minLen = this.props.minLen;\r\n    const value = input.value;\r\n\r\n    if (value && value.length >= minLen) {\r\n      result = true;\r\n      this.setValid(input);\r\n    } else {\r\n      this.setInvalid(input);\r\n    }\r\n    this.props.onValidate(result);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={this.props.shouldHide ? 'mb-3 hidden' : 'mb-3'} >\r\n        {/* <label htmlFor=\"userSecondName\">{this.props.label}</label> */}\r\n        <div className=\"floating-label-group\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"userSecondName\"\r\n            name=\"userSecondName\"\r\n            onChange={this.handleChange}\r\n            value={this.props.value}\r\n            required\r\n          />\r\n          <span className=\"floating-label\">{this.props.label}</span>\r\n          <div className=\"invalid-feedback\" stylename=\"width: 100%\">\r\n            {this.props.invalidMessage}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InputUserSecondName;\r\n","import React from \"react\";\r\nimport InputComponent from \"./inputcomponent\";\r\n\r\nclass InputUserSurname extends InputComponent {\r\n  handleChange = e => {\r\n    // fire the form change event\r\n    this.props.onChange(e);\r\n    this.validateValue(e.target);\r\n  };\r\n\r\n  validateValue(input) {\r\n    let result = false;\r\n    const minLen = this.props.minLen;\r\n    const value = input.value;\r\n\r\n    if (value && value.length >= minLen) {\r\n      result = true;\r\n      this.setValid(input);\r\n    } else {\r\n      this.setInvalid(input);\r\n    }\r\n    this.props.onValidate(result);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={this.props.shouldHide ? 'mb-3 hidden' : 'mb-3'} >\r\n        {/* <label htmlFor=\"userSurname\">{this.props.label}</label> */}\r\n        <div className=\"floating-label-group\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"userSurname\"\r\n            name=\"userSurname\"\r\n            onChange={this.handleChange}\r\n            value={this.props.value}\r\n            required\r\n          />\r\n          \r\n          <span className=\"floating-label\">{this.props.label}</span>\r\n          <div className=\"invalid-feedback\" stylename=\"width: 100%\">\r\n            {this.props.invalidMessage}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InputUserSurname;\r\n","import React from \"react\";\r\nimport InputComponent from \"./inputcomponent\";\r\n\r\nclass InputCategory extends InputComponent {\r\n  handleChange = e => {\r\n    // fire the form change event\r\n    this.props.onChange(e);\r\n    //this.validateValue();\r\n  };\r\n\r\n  // validateValue = () => {\r\n  //   this.props.onValidate(true);\r\n  // };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"d-block my-3\">\r\n          <div className=\"custom-control custom-switch\">\r\n            <input\r\n              id=\"category\"\r\n              name=\"category\"\r\n              type=\"checkbox\"\r\n              checked={this.props.value}\r\n              className=\"form-control custom-control-input\"\r\n              onChange={this.handleChange}\r\n            />\r\n            <label className=\"custom-control-label\" htmlFor=\"category\">\r\n              {this.props.label}\r\n            </label>\r\n          </div>\r\n          {/* <div className=\"text-muted\">\r\n            {this.props.infoMessage}\r\n          </div> */}\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InputCategory;\r\n","import React from \"react\";\r\nimport InputComponent from \"./inputcomponent\";\r\n\r\nclass Inputcheckpersdata extends InputComponent {\r\n\r\n  handleChange = e => {\r\n    // fire the form change event\r\n    this.props.onChange(e);\r\n    this.validateValue(e.target);\r\n  };\r\n\r\n  validateValue = input => {\r\n    const checked = input.checked;\r\n    if (checked ){\r\n      this.props.onValidate(true);\r\n    } else {\r\n      this.props.onValidate(false);\r\n    }\r\n  };\r\n\r\n  handleModalToggle = () => {\r\n    this.props.handleModal(this.props.modalTitle, this.props.modalText);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"d-block my-3\">\r\n          {this.props.items.map(item => (\r\n            <div key={item.id} className=\"custom-control custom-switch\">\r\n              {/* checked={item.checked} */}\r\n              <input\r\n                id={item.id}\r\n                key={item.id}\r\n                value={item.id}\r\n                name=\"checkpersdata\"\r\n                type=\"checkbox\"\r\n                checked={this.props.value}\r\n                className=\"form-control custom-control-input\"\r\n                onChange={this.handleChange}\r\n                required\r\n              />\r\n\r\n              <label className=\"custom-control-label\" htmlFor={item.id}>\r\n                {item.text}\r\n              </label>\r\n              {\". \"}\r\n          <a href=\"javascript:void(null);\" onClick={this.handleModalToggle}>{this.props.aboutLink}</a>\r\n\r\n              {this.props.items.length - 1 === Number.parseInt(item.id) && (\r\n                <div className=\"invalid-feedback\" stylename=\"width: 100%\">\r\n                  {this.props.invalidMessage}\r\n                </div>\r\n              )}\r\n            </div>\r\n          ))}\r\n          {/* <div className=\"text-muted\">\r\n            {this.props.infoMessage}\r\n          </div> */}\r\n        </div>\r\n\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Inputcheckpersdata;\r\n","import React from \"react\";\r\nimport InputComponent from \"./inputcomponent\";\r\nimport Backend from \"./backend\";\r\n\r\nclass InputCaptcha extends InputComponent {\r\n  state = {};\r\n  backend = new Backend();\r\n\r\n  handleChange = e => {\r\n    // fire the form change event\r\n    this.props.onChange(e);\r\n    this.validateValue(e.target);\r\n  };\r\n\r\n  validateValue(inputField) {\r\n    const xhr = this.backend.createXHR();\r\n\r\n    xhr.open(\r\n      \"GET\",\r\n      \"/NDI_EPCOMMON_D~gzpn~regform~service~rs~gazprom-neft.ru/rs/regform/checkcaptcha/\" +\r\n        inputField.value,\r\n      true\r\n    );\r\n\r\n    xhr.send();\r\n    xhr.onreadystatechange = () => {\r\n      let result = false;\r\n      console.log(xhr.status);\r\n      if (xhr.readyState !== 4) {\r\n        return false;\r\n      }\r\n      if (xhr.status !== 200) {\r\n        this.setInvalid(inputField);\r\n      } else {\r\n        const oResult = JSON.parse(xhr.responseText);\r\n        console.log(oResult);\r\n        console.log(\"oResult.captchaPassed\", oResult.response.captchaPassed);\r\n        if (oResult.response.captchaPassed === true) {\r\n          this.setValid(inputField);\r\n          result = true;\r\n        } else {\r\n          this.setInvalid(inputField);\r\n        }\r\n      }\r\n\r\n      this.props.onValidate(result);\r\n    };\r\n  }\r\n\r\n  handleImageClick(event) {\r\n    let index = event.target.src.indexOf(\"?t=\");\r\n    let url = event.target.src;\r\n    if (index > -1) {\r\n      url = url.slice(0, index);\r\n    }\r\n\r\n    event.target.src = \"\";\r\n    event.target.src = url + \"?t=\" + new Date().getTime();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        {/* <hr className=\"mt-4\" /> */}\r\n\r\n        <div className=\"mb-3\">\r\n          <div className=\"input-group\">\r\n            <div className=\"input-group-prepend\">\r\n              <img\r\n                id=\"captchaid\"\r\n                alt=\"\"\r\n                src=\"/NDI_EPCOMMON_D~gzpn~regform~service~rs~gazprom-neft.ru/rs/regform/captcha\"\r\n                className=\"gzpn-captcha-img\"\r\n                onClick={this.handleImageClick}\r\n              />\r\n            </div>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"checkCode\"\r\n              name=\"checkCode\"\r\n              placeholder={this.props.placeholder}\r\n              required\r\n              value={this.props.value}\r\n              onChange={this.handleChange}\r\n            />\r\n            <div className=\"invalid-feedback\" stylename=\"width: 100%\">\r\n              {this.props.invalidMessage}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-3 mb-3\" />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InputCaptcha;\r\n","import React, { Component } from \"react\";\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from \"reactstrap\";\r\n\r\nclass MessageWindow extends Component {\r\n  state = {\r\n    //modal: this.props.modal,\r\n    backdrop: true,\r\n    size: \"lg\"\r\n  };\r\n\r\n  // toggle = () => this.setState({\r\n  //   modal: !this.props.modal\r\n  // });\r\n\r\n  handleModalToggle = () => {\r\n    this.props.handleModal();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {/* <a href=\"#\" onClick={this.toggle}>подробнее</a> */}\r\n        <Modal\r\n          //isOpen={this.state.modal}\r\n          isOpen={this.props.modal}\r\n          toggle={this.handleModalToggle}\r\n          className={this.props.className}\r\n          backdrop={this.state.backdrop}\r\n          size={this.state.size}\r\n        >\r\n          <ModalHeader toggle={this.handleModalToggle}>{this.props.title}</ModalHeader>\r\n          <ModalBody>\r\n            {/* {this.props.textPD} */}\r\n            <div dangerouslySetInnerHTML={{ __html: this.props.text }} />\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button color=\"secondary\" onClick={this.handleModalToggle}>\r\n              Закрыть\r\n          </Button>\r\n          </ModalFooter>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MessageWindow;\r\n","import React, { Component } from \"react\";\r\n\r\nimport { Form, Col, Row, Card, CardBody } from \"reactstrap\";\r\nimport InputEmail from \"./_inputemail\";\r\nimport InputSendBtn from \"./inputsendbtn\";\r\nimport InputFullname from \"./_inputfullname\";\r\nimport InputShortname from \"./_inputshortname\";\r\nimport InputKpp from \"./_inputkpp\";\r\nimport InputInn from \"./_inputinn\";\r\nimport InputOgrn from \"./_inputogrn\";\r\nimport InputOktmo from \"./_inputoktmo\";\r\n//import InputEgrul from \"./_inputegrul\";\r\nimport InputTokenRegCheckbox from \"./_inputtokenreg\";\r\nimport InputToken from \"./_inputtoken\";\r\nimport InputEmailOrg from \"./_inputemailorg\";\r\nimport InputPhoneOrg from \"./_inputphoneorg\";\r\nimport InputRegNum from \"./_inputregnum\";\r\nimport InputUserName from \"./_inputusername\";\r\nimport InputSecondName from \"./_inputusersecondname\";\r\nimport InputUserSurname from \"./_inputusershurname\";\r\nimport InputCategory from \"./_inputcategory\";\r\nimport Inputcheckpersdata from \"./_inputcheckpersdata\";\r\nimport InputCaptcha from \"./inputcaptcha\";\r\nimport MessageWindow from \"./messagewindow\";\r\n//import TextareaMessage from \"./textareamessage\";\r\n//import AttachmentList from \"./attachments\";\r\n\r\nclass RegForm extends Component {\r\n  form = React.createRef();\r\n  //attachList = React.createRef();\r\n\r\n  state = {\r\n    category: false,\r\n    tokenReg: false,\r\n    modal: false,\r\n    token: \"\",\r\n    //user\r\n    email: \"\",\r\n    userName: \"\",\r\n    userSecondName: \"\",\r\n    userSurname: \"\",\r\n    checkpersdata: \"\",\r\n    //org\r\n    fullName: \"\",\r\n    shortName: \"\",\r\n    kpp: \"\",\r\n    inn: \"\",\r\n    ogrn: \"\",\r\n    oktmo: \"\",\r\n    emailOrg: \"\",\r\n    phoneOrg: \"\",\r\n    regNum: \"\",\r\n    //engName: \"\",\r\n    //adress: \"\",\r\n    //adressEng: \"\",\r\n    // data\r\n    checkCode: \"\",\r\n    //message: \"\",\r\n\r\n    validate: {\r\n      userName: false,\r\n      userSecondName: false,\r\n      userSurname: false,\r\n      email: false,\r\n      fullname: false,\r\n      shortName: false,\r\n      kpp: false,\r\n      inn: false,\r\n      ogrn: false,\r\n      oktmo: false,\r\n      //engName: false,\r\n      //adress: false,\r\n      //adressEng: false\r\n      regNum: false,\r\n      phoneOrg: false,\r\n      emailOrg: false,\r\n\r\n      token: false,\r\n      checkpersdata: false,\r\n      checkCode: false\r\n      //message: false,\r\n    }\r\n  };\r\n\r\n  // handle input states\r\n  handleChanges = e => {\r\n    const target = e.target;\r\n    const name = target.name;\r\n    const value = target.type === 'checkbox' ? target.checked : target.value;\r\n\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n\r\n    // remove form's top validated style\r\n    this.form.current.classList.remove(\"was-validated\");\r\n  };\r\n\r\n  //modal show-hide\r\n  handleModal = (title, text) => {\r\n    this.setState({\r\n      modal: !this.state.modal,\r\n      title: title,\r\n      text: text\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    // const isValid =\r\n    //   !Object.values(this.state.validate).includes(false) &&\r\n    //   this.attachList.current.isValid();\r\n    console.log(\"handleSubmit validate \", this.state);\r\n\r\n    let isValid;\r\n    // let UserValid = [\"userName\", \"userSecondName\", \"userSurname\", \"email\", \"checkpersdata\"];\r\n    // let RezValid = [\"fullname\", \"shortName\", \"kpp\", \"inn\",\"ogrn\",\"oktmo\",\"phoneOrg\",\"emailOrg\"];\r\n    // let NoRezValid = [\"fullname\", \"shortName\", \"regNum\", \"phoneOrg\",\"emailOrg\"];\r\n\r\n    if (\r\n      this.state.validate.userName &&\r\n      this.state.validate.userSecondName &&\r\n      this.state.validate.userSurname &&\r\n      this.state.validate.email &&\r\n      this.state.validate.checkpersdata\r\n    ) {\r\n      if (this.state.tokenReg) {\r\n        if (this.state.validate.token) {\r\n          isValid = true\r\n        } else {\r\n          isValid = false\r\n        }\r\n      } else {\r\n        // check rezident or Noresident fields\r\n        if (this.state.category) {\r\n          if (\r\n            this.state.validate.fullname &&\r\n            this.state.validate.shortName &&\r\n            this.state.validate.regNum &&\r\n            this.state.validate.phoneOrg &&\r\n            this.state.validate.emailOrg\r\n          ) {\r\n            isValid = true\r\n          } else {\r\n            isValid = false\r\n          }\r\n        } else {\r\n          if (\r\n            this.state.validate.fullname &&\r\n            this.state.validate.shortName &&\r\n            this.state.validate.kpp &&\r\n            this.state.validate.inn &&\r\n            this.state.validate.ogrn &&\r\n            this.state.validate.oktmo &&\r\n            this.state.validate.phoneOrg &&\r\n            this.state.validate.emailOrg\r\n          ) {\r\n            isValid = true\r\n          } else {\r\n            isValid = false\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      isValid = false\r\n    }\r\n\r\n    // submit\r\n    if (isValid) {\r\n      this.props.onSubmit(e.target);\r\n    } else {\r\n      e.target.classList.add(\"was-validated\");\r\n    }\r\n  };\r\n\r\n  handleValidate = (param, isValid) => {\r\n    let validate = { ...this.state.validate };\r\n    validate[param] = isValid;\r\n    this.setState({ validate: validate });\r\n  };\r\n\r\n  render() {\r\n    const i18n = this.props.i18n;\r\n\r\n    return (\r\n      <Form noValidate onSubmit={this.handleSubmit} innerRef={this.form}>\r\n        <Row>\r\n          {/* <AttachmentList\r\n            ref={this.attachList}\r\n            caption={i18n.attachmentList.caption}\r\n            btnlabel={i18n.attachmentList.addAttachment.label}\r\n            totalLabel={i18n.attachmentList.total}\r\n            maxFiles={i18n.attachmentList.maxFiles}\r\n            maxTotalFileSizeMb={i18n.attachmentList.maxTotalFileSizeMb}\r\n            invalidTotalFileSize={\r\n              i18n.attachmentList.validation.maxTotalFileSizeMb\r\n            }\r\n            invalidFilesCount={i18n.attachmentList.validation.maxFiles}\r\n          /> */}\r\n          <Col md={{ size: 12, order: 1 }}>\r\n\r\n            <Card body style={{ marginBottom: '1rem' }} >\r\n\r\n              <CardBody>\r\n\r\n                <h5 className=\"mb-3\" >{i18n.userHeader}</h5>\r\n\r\n                <InputUserName\r\n                  value={this.state.userName}\r\n                  onValidate={isValid => this.handleValidate(\"userName\", isValid)}\r\n                  onChange={this.handleChanges}\r\n                  label={i18n.formFields.userName.label}\r\n                  placeholder={i18n.formFields.userName.placeholder}\r\n                  invalidMessage={i18n.formFields.userName.validation.emptyValue}\r\n                  minLen={i18n.formFields.userName.validation.minLen}\r\n                />\r\n\r\n                <InputSecondName\r\n                  value={this.state.userSecondName}\r\n                  onValidate={isValid => this.handleValidate(\"userSecondName\", isValid)}\r\n                  onChange={this.handleChanges}\r\n                  label={i18n.formFields.userSecondName.label}\r\n                  placeholder={i18n.formFields.userSecondName.placeholder}\r\n                  invalidMessage={i18n.formFields.userSecondName.validation.emptyValue}\r\n                  minLen={i18n.formFields.userSecondName.validation.minLen}\r\n                />\r\n\r\n                <InputUserSurname\r\n                  value={this.state.userSurname}\r\n                  onValidate={isValid => this.handleValidate(\"userSurname\", isValid)}\r\n                  onChange={this.handleChanges}\r\n                  label={i18n.formFields.userSurname.label}\r\n                  placeholder={i18n.formFields.userSurname.placeholder}\r\n                  invalidMessage={i18n.formFields.userSurname.validation.emptyValue}\r\n                  minLen={i18n.formFields.userSurname.validation.minLen}\r\n                />\r\n\r\n                <InputEmail\r\n                  value={this.state.email}\r\n                  onValidate={isValid => this.handleValidate(\"email\", isValid)}\r\n                  onChange={this.handleChanges}\r\n                  label={i18n.formFields.email.label}\r\n                  placeholder={i18n.formFields.email.placeholder}\r\n                  invalidMessage={i18n.formFields.email.validation.emptyValue}\r\n                />\r\n\r\n                <h5 className=\"mb-3 mt-5\" >{i18n.organizationHeader}</h5>\r\n\r\n                <InputCategory\r\n                  //onValidate={isValid => this.handleValidate(\"category\", isValid)}\r\n                  value={this.state.category}\r\n                  onChange={this.handleChanges}\r\n                  label={i18n.formFields.category.label}\r\n                  invalidMessage={i18n.formFields.category.validation.emptyValue}\r\n                  infoMessage={i18n.formFields.category.infoMessage}\r\n                />\r\n\r\n                <InputTokenRegCheckbox\r\n                  value={this.state.tokenReg}\r\n                  onChange={this.handleChanges}\r\n                  label={i18n.formFields.tokenReg.label}\r\n                  handleModal={this.handleModal}\r\n                  modalTitle={i18n.formFields.tokenReg.modal.title}\r\n                  modalText={i18n.formFields.tokenReg.modal.text}\r\n                  aboutLink={i18n.formFields.tokenReg.aboutLink}\r\n                />\r\n\r\n                <div id=\"if-no-token\" className={this.state.tokenReg ? 'hidden' : ''}>\r\n\r\n                  <InputFullname\r\n                    value={this.state.fullname}\r\n                    onValidate={isValid => this.handleValidate(\"fullname\", isValid)}\r\n                    onChange={this.handleChanges}\r\n                    label={i18n.formFields.fullName.label}\r\n                    placeholder={i18n.formFields.fullName.placeholder}\r\n                    invalidMessage={i18n.formFields.fullName.validation.emptyValue}\r\n                    minLen={i18n.formFields.fullName.validation.minLen}\r\n                  />\r\n\r\n                  <InputShortname\r\n                    value={this.state.shortName}\r\n                    onValidate={isValid => this.handleValidate(\"shortName\", isValid)}\r\n                    onChange={this.handleChanges}\r\n                    label={i18n.formFields.shortName.label}\r\n                    placeholder={i18n.formFields.shortName.placeholder}\r\n                    invalidMessage={i18n.formFields.shortName.validation.emptyValue}\r\n                    minLen={i18n.formFields.shortName.validation.minLen}\r\n                  />\r\n\r\n                  <div id=\"resident-info\" className={this.state.category ? 'hidden' : ''}>\r\n\r\n                    <InputInn\r\n                      value={this.state.inn}\r\n                      onValidate={isValid => this.handleValidate(\"inn\", isValid)}\r\n                      onChange={this.handleChanges}\r\n                      label={i18n.formFields.inn.label}\r\n                      placeholder={i18n.formFields.inn.placeholder}\r\n                      invalidMessage={i18n.formFields.inn.validation.emptyValue}\r\n                      minLen={i18n.formFields.inn.validation.minLen}\r\n                      maxLen={i18n.formFields.inn.validation.maxLen}\r\n                    />\r\n\r\n                    <InputKpp\r\n                      value={this.state.kpp}\r\n                      onValidate={isValid => this.handleValidate(\"kpp\", isValid)}\r\n                      onChange={this.handleChanges}\r\n                      label={i18n.formFields.kpp.label}\r\n                      placeholder={i18n.formFields.kpp.placeholder}\r\n                      invalidMessage={i18n.formFields.kpp.validation.emptyValue}\r\n                      minLen={i18n.formFields.kpp.validation.minLen}\r\n                      maxLen={i18n.formFields.kpp.validation.maxLen}\r\n                    />\r\n\r\n                    <InputOktmo\r\n                      value={this.state.oktmo}\r\n                      onValidate={isValid => this.handleValidate(\"oktmo\", isValid)}\r\n                      onChange={this.handleChanges}\r\n                      label={i18n.formFields.oktmo.label}\r\n                      placeholder={i18n.formFields.oktmo.placeholder}\r\n                      invalidMessage={i18n.formFields.oktmo.validation.emptyValue}\r\n                      minLen={i18n.formFields.oktmo.validation.minLen}\r\n                      maxLen={i18n.formFields.oktmo.validation.maxLen}\r\n                    />\r\n\r\n                    <InputOgrn\r\n                      value={this.state.ogrn}\r\n                      onValidate={isValid => this.handleValidate(\"ogrn\", isValid)}\r\n                      onChange={this.handleChanges}\r\n                      label={i18n.formFields.ogrn.label}\r\n                      placeholder={i18n.formFields.ogrn.placeholder}\r\n                      invalidMessage={i18n.formFields.ogrn.validation.emptyValue}\r\n                      minLen={i18n.formFields.ogrn.validation.minLen}\r\n                      maxLen={i18n.formFields.ogrn.validation.maxLen}\r\n                    />\r\n\r\n                  </div> \r\n                  {/* resident-info */}\r\n\r\n                  <div id=\"no-resident-info\" className={this.state.category ? '' : 'hidden'}>\r\n                  <InputRegNum\r\n                      value={this.state.regNum}\r\n                      onValidate={isValid => this.handleValidate(\"regNum\", isValid)}\r\n                      onChange={this.handleChanges}\r\n                      label={i18n.formFields.regNum.label}\r\n                      placeholder={i18n.formFields.regNum.placeholder}\r\n                      invalidMessage={i18n.formFields.regNum.validation.emptyValue}\r\n                      minLen={i18n.formFields.regNum.validation.minLen}\r\n                    />\r\n                </div>\r\n\r\n                  <InputPhoneOrg\r\n                    value={this.state.phoneOrg}\r\n                    onValidate={isValid => this.handleValidate(\"phoneOrg\", isValid)}\r\n                    onChange={this.handleChanges}\r\n                    label={i18n.formFields.phoneOrg.label}\r\n                    placeholder={i18n.formFields.phoneOrg.placeholder}\r\n                    invalidMessage={i18n.formFields.phoneOrg.validation.emptyValue}\r\n                    minLen={i18n.formFields.phoneOrg.validation.minLen}\r\n                  />\r\n\r\n                  <InputEmailOrg\r\n                    value={this.state.emailOrg}\r\n                    onValidate={isValid => this.handleValidate(\"emailOrg\", isValid)}\r\n                    onChange={this.handleChanges}\r\n                    label={i18n.formFields.emailOrg.label}\r\n                    placeholder={i18n.formFields.emailOrg.placeholder}\r\n                    invalidMessage={i18n.formFields.emailOrg.validation.emptyValue}\r\n                  />\r\n\r\n                </div>\r\n                {/* if-no-token */}\r\n\r\n                <InputToken\r\n                  value={this.state.token}\r\n                  required={this.state.tokenReg}\r\n                  shouldHide={!this.state.tokenReg}\r\n                  onValidate={isValid => this.handleValidate(\"token\", isValid)}\r\n                  onChange={this.handleChanges}\r\n                  label={i18n.formFields.token.label}\r\n                  placeholder={i18n.formFields.token.placeholder}\r\n                  invalidMessage={i18n.formFields.token.validation.emptyValue}\r\n                  minLen={i18n.formFields.token.validation.minLen}\r\n                  maxLen={i18n.formFields.token.validation.maxLen}\r\n                />\r\n\r\n                {/* <TextareaMessage\r\n                  value={this.state.message}\r\n                  onChange={this.handleChanges}\r\n                  onValidate={isValid => this.handleValidate(\"message\", isValid)}\r\n                  label={i18n.formFields.message.label}\r\n                  placeholder={i18n.formFields.message.placeholder}\r\n                  invalidMessage={i18n.formFields.message.validation.emptyValue}\r\n                  minLen={i18n.formFields.message.validation.minLen}\r\n                /> */}\r\n\r\n                <hr className=\"mt-4\" />\r\n\r\n                <Inputcheckpersdata\r\n                  onValidate={isValid => this.handleValidate(\"checkpersdata\", isValid)}\r\n                  onChange={this.handleChanges}\r\n                  items={i18n.formFields.checkpersdata.items}\r\n                  label={i18n.formFields.checkpersdata.label}\r\n                  invalidMessage={i18n.formFields.checkpersdata.validation.emptyValue}\r\n                  infoMessage={i18n.formFields.checkpersdata.infoMessage}\r\n                  handleModal={this.handleModal}\r\n                  modalText={i18n.formFields.checkpersdata.textPD}\r\n                  modalTitle={i18n.formFields.checkpersdata.placeholder}\r\n                  aboutLink={i18n.formFields.checkpersdata.aboutLink}\r\n                />\r\n\r\n                <MessageWindow\r\n                  className=\"classModal\"\r\n                  modal={this.state.modal}\r\n                  handleModal={this.handleModal}\r\n                  title={this.state.title}\r\n                  text={this.state.text}\r\n                />\r\n\r\n                <InputCaptcha\r\n                  value={this.state.checkCode}\r\n                  onChange={this.handleChanges}\r\n                  onValidate={isValid => this.handleValidate(\"checkCode\", isValid)}\r\n                  placeholder={i18n.formFields.captcha.label}\r\n                  invalidMessage={\r\n                    i18n.formFields.captcha.validation.emptyOrIncorrect\r\n                  }\r\n                />\r\n\r\n                <InputSendBtn caption={i18n.formFields.btnSend.caption} />\r\n\r\n              </CardBody>\r\n            </Card>\r\n\r\n            {/* <Card body>\r\n            <CardTitle>Контактные данные</CardTitle>\r\n            <CardBody>\r\n            </CardBody>\r\n            </Card> */}\r\n\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\nexport default RegForm;\r\n","import React, { Component } from \"react\";\r\n\r\nclass ProgressIndicator extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"progress\">\r\n        <div\r\n          className=\"progress-bar progress-bar-striped progress-bar-animated\"\r\n          role=\"progressbar\"\r\n          aria-valuenow={this.props.value}\r\n          aria-valuemin=\"0\"\r\n          aria-valuemax=\"100\"\r\n          style={{ width: this.props.value + \"%\" }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProgressIndicator;\r\n","import React, { Component } from \"react\";\r\nimport { Spinner, Alert, Button } from \"reactstrap\";\r\n//import FeedbackForm from \"./feedbackform\";\r\nimport RegForm from \"./_regform\";\r\nimport Backend from \"./backend\";\r\nimport ProgressIndicator from \"./progressindicator\";\r\n//import { useHistory } from \"react-router-dom\";\r\n\r\nclass RegisterPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      headtext: props.i18n.headText,\r\n      status: undefined,\r\n      progress: undefined,\r\n      httpError: undefined,\r\n      tokenVerified: undefined,\r\n      alertText: undefined,\r\n      alertColor: undefined,\r\n      alertVisible: false\r\n    }; \r\n  }\r\n\r\n  componentDidMount() {\r\n    // link with token from email\r\n    let search = window.location.search;\r\n    //let path = window.location.pathname;\r\n    let params = new URLSearchParams(search);\r\n    let token = params.get('token');\r\n    console.log(token);\r\n\r\n    // ie\r\n    let ie = require(\"ie-version\");\r\n    if (ie.version && ie.version <= 9) {\r\n      this.setState({ status: \"oldbrowser\" });\r\n    } else if (token) {\r\n      this.verifyToken(token);\r\n      //test pages\r\n      //this.setState({ status: \"tokenFromEmailValid\" });\r\n      //this.setState({ status: \"tokenFromEmailNotValid\" });\r\n    } else {\r\n      this.setState({ status: \"RegForm\" });\r\n    }\r\n  }\r\n\r\n  handleSubmit = oForm => {\r\n    const backend = new Backend();\r\n    const url =\r\n      \"/NDI_EPCOMMON_D~gzpn~regform~service~rs~gazprom-neft.ru/rs/regform/\";\r\n    backend.asyncSubmit(\r\n      oForm,\r\n      url,\r\n      this.handleResponse,\r\n      this.handleProgress,\r\n      this.handleError\r\n    );\r\n  };\r\n\r\n  handleResponse = oResponse => {\r\n    console.log(\"handleResponse\", oResponse);\r\n\r\n    if (oResponse.response.exceptionMessage) {\r\n      this.setState({\r\n        status: \"error\",\r\n        alertText: oResponse.response.exceptionMessage,\r\n        alertColor: \"danger\",\r\n        alertVisible: true\r\n      });\r\n    } else {\r\n      console.log(\"success\", oResponse.response.requestCategory);\r\n      this.setState({\r\n        status: \"success\",\r\n        alertText: oResponse.response.requestCategory,\r\n        alertColor: \"info\",\r\n        alertVisible: true\r\n      });\r\n    }\r\n  };\r\n\r\n  handleProgress = event => {\r\n    console.log(\"progressEvent\", event);\r\n    if (event.lengthComputable) {\r\n      let percentage = Math.round((event.loaded * 100) / event.total);\r\n\r\n      this.setState({\r\n        status: \"progress\",\r\n        progress: percentage,\r\n        httpError: \"\",\r\n        alertVisible: false\r\n        //headtext: this.props.i18n.progressIndicator.caption\r\n      });\r\n    }\r\n  };\r\n\r\n  handleError = httpError => {\r\n    this.setState({\r\n      status: \"error\",\r\n      httpError: httpError,\r\n      alertText: this.props.i18n.errors[httpError],\r\n      alertColor: \"danger\",\r\n      alertVisible: true\r\n    });\r\n  };\r\n\r\n  oldBrowser() {\r\n    return (\r\n      <React.Fragment>\r\n        <p className=\"not-supported\">\r\n          Вам необходимо обновить Ваш браузер. Используйте последние версии\r\n          Internet Explorer и Google Chrome.\r\n        </p>\r\n        <p className=\"not-supported\">\r\n          Your need to update your Browser. Use the latest versions of IE and\r\n          Google Chrome.\r\n        </p>\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  verifyToken(sToken) {\r\n    //http://localhost:3000/?token=123\r\n    const backend = new Backend();\r\n    const url =\r\n      \"/NDI_EPCOMMON_D~gzpn~regform~service~rs~gazprom-neft.ru/rs/regform/verify\";\r\n    backend.asyncSubmitVerifyToken(\r\n      sToken,\r\n      url,\r\n      this.handleResponseTokenVerify,\r\n      this.handleError\r\n    );\r\n\r\n    /// GET\r\n    // const backend = new Backend();\r\n    // this.setState({ \r\n    //     status: \"progress\"});\r\n    // const xhr = backend.createXHR();\r\n\r\n    // xhr.open(\r\n    //   \"GET\",\r\n    //   \"/NDI_EPCOMMON_D~gzpn~regform~service~rs~gazprom-neft.ru/rs/regform/verify?token=\" +\r\n    //     sToken,\r\n    //   true\r\n    // );\r\n\r\n    // xhr.send();\r\n    // xhr.onreadystatechange = () => {\r\n    //   //let result = false;\r\n    //   console.log(xhr.status);\r\n    //   if (xhr.readyState !== 4) {\r\n    //     return false;\r\n    //   }\r\n    //   if (xhr.status !== 200) {\r\n    //     const oResult = JSON.parse(xhr.responseText);\r\n    //     console.log(oResult);\r\n    //       /// добавить состояние - ошибка\r\n    //       this.setState({ status: \"error\" });\r\n    //       ////\r\n    //   } else {\r\n    //     const oResult = JSON.parse(xhr.responseText);\r\n    //     console.log(oResult);\r\n    //     console.log(\"tokenValid= \", oResult.response.tokenValid);\r\n\r\n    //     if (oResult.response.tokenValid === true) {\r\n    //       this.setState({ status: \"tokenFromEmailValid\" });\r\n    //     } else {\r\n    //       this.setState({ status: \"tokenFromEmailNotValid\" });\r\n    //     }\r\n    //   }\r\n    // };\r\n  };\r\n\r\n  handleResponseTokenVerify = oResponse => {\r\n    console.log(\"handleResponseVerify\", oResponse);\r\n    //JSON.parse(oResponse);\r\n\r\n    if (oResponse === \"NoVerified\") {\r\n      this.setState({ \r\n        status: \"tokenFromEmailNotValid\"\r\n      });\r\n    } else if (oResponse === \"Verified\"){\r\n      this.setState({ \r\n        status: \"tokenFromEmailValid\"\r\n      });\r\n    } else {\r\n      this.setState({ \r\n        status: \"error\",\r\n        headtext: \"Error in token verified, unknown response\"\r\n      });\r\n    }\r\n  };\r\n\r\n  tokenFromEmailValidPage() {\r\n    // let history = useHistory();\r\n\r\n    function handleClick() {\r\n      //history.push(\"/\");\r\n      window.location.assign(\"/NDI_EPCOMMON_D~gzpn~regform~service~rs~gazprom-neft.ru/rs/regform/\");\r\n    }\r\n    return (\r\n      <React.Fragment>\r\n        <p className=\"LinkFromEmailPage\">\r\n          <Alert color=\"success\">\r\n            {this.props.i18n.tokenFromEmailValidPage.success}\r\n          </Alert>\r\n          <Button outline color=\"primary\" onClick={handleClick}>Вернуться к форме регистрации</Button>\r\n        </p>\r\n        {/* <p className=\"LinkFromEmailPage\">\r\n          Your account has been succesfully validated.\r\n        </p> */}\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  tokenFromEmailNotValidPage() {\r\n    // let history = useHistory();\r\n    function handleClick() {\r\n      //history.push(\"/\");\r\n      window.location.assign(\"/NDI_EPCOMMON_D~gzpn~regform~service~rs~gazprom-neft.ru/rs/regform/\");\r\n    }\r\n    return (\r\n      <React.Fragment>\r\n        <p className=\"LinkFromEmailPage\">\r\n          <Alert color=\"danger\">\r\n            {this.props.i18n.tokenFromEmailValidPage.error}\r\n          </Alert>\r\n          <Button outline color=\"primary\" onClick={handleClick}>Вернуться к форме регистрации</Button>\r\n        </p>\r\n        {/* <p className=\"LinkFromEmailPage\">\r\n          Your account has been not validated.\r\n        </p> */}\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  // alert dismiss\r\n  onDismissAlert = () => {\r\n    this.setState({\r\n      alertVisible: !this.state.alertVisible\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const i18n = this.props.i18n;\r\n    let content = undefined;\r\n\r\n    switch (this.state.status) {\r\n      case \"error\":\r\n        content = <RegForm i18n={i18n} onSubmit={this.handleSubmit}/>;\r\n        break;\r\n      case \"success\":\r\n        content = <RegForm i18n={i18n} onSubmit={this.handleSubmit}/>;\r\n        break;\r\n      case \"oldbrowser\":\r\n        content = this.oldBrowser();\r\n        break;\r\n      case \"progress\":\r\n        content = <ProgressIndicator value={this.state.progress} />;\r\n        break;\r\n      case \"tokenFromEmailValid\":\r\n        // переход по ссылке проверки токена - вывод страницы с сообщением\r\n        content = this.tokenFromEmailValidPage();\r\n        break;\r\n      case \"tokenFromEmailNotValid\":\r\n        // переход по ссылке проверки токена - вывод страницы с сообщением\r\n        content = this.tokenFromEmailNotValidPage();\r\n        break;\r\n\r\n      case \"RegForm\":\r\n        content = <RegForm i18n={i18n} onSubmit={this.handleSubmit} />;\r\n        break;\r\n\r\n      default:\r\n        content = <Spinner color=\"dark\" className=\"spinner\" />;\r\n    }\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"pt-5\">\r\n          <img\r\n            className=\"d-block ml-auto mr-0 mb-4\"\r\n            src=\"/NDI_EPCOMMON_D~gzpn~regform~service~rs~gazprom-neft.ru/regform/logo.png\"\r\n            //src=\"../logo.png\"\r\n            alt=\"\"\r\n          />\r\n          <h2>{i18n.caption}</h2>\r\n          <p className=\"lead\">{this.state.headtext}</p>\r\n          <Alert color={this.state.alertColor} isOpen={this.state.alertVisible} toggle={this.onDismissAlert}>\r\n              <h4 className={this.state.httpError ? 'alert-heading' : 'alert-heading hidden'} >Ошибка {this.state.httpError}</h4>\r\n              {this.state.alertText}\r\n          </Alert>\r\n        </div>\r\n        {content}\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RegisterPage;\r\n","import React, { Component } from \"react\";\nimport { Spinner } from \"reactstrap\";\nimport \"./App.css\";\nimport Backend from \"./components/backend\";\nimport i18n_ru from \"./i18n_ru.json\";\nimport RegisterPage from \"./components/_registerpage\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { i18n: null };\n    this.backend = new Backend();\n  }\n\n  updateI18n() {\n    if (window.location.hostname === \"localhost\" || window.location.hostname === \"127.0.0.1\") {\n      //LOCAL\n      this.setState({ i18n: i18n_ru });\n    } else {\n      //SERVER\n      this.setState({ i18n: null });\n      this.backend.getI18n(\n        \"/NDI_EPCOMMON_D~gzpn~regform~service~rs~gazprom-neft.ru/rs/regform/i18n\",\n        oI18n => {\n          this.setState({ i18n: oI18n });\n          document.title = oI18n.register.caption;\n        }\n      );\n    }\n  }\n\n  componentDidMount() {\n    this.updateI18n();\n  }\n\n  render() {\n    return this.state.i18n ? (\n      <RegisterPage i18n={this.state.i18n.register} />\n    ) : (\n      <Spinner color=\"dark\" className=\"spinner\" />\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import \"react-app-polyfill/ie9\";\nimport \"react-app-polyfill/stable\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}