{"version":3,"sources":["components/backend.js","components/inputcomponent.jsx","components/_inputemail.jsx","components/inputsendbtn.jsx","components/_inputfullname.jsx","components/_inputshortname.jsx","components/_inputkpp.jsx","components/_inputinn.jsx","components/_inputogrn.jsx","components/_inputoktmo.jsx","components/_inputegrul.jsx","components/_inputtoken.jsx","components/_inputnameeng.jsx","components/_inputadress.jsx","components/_inputadresseng.jsx","components/_inputcategory.jsx","components/inputcaptcha.jsx","components/_regform.jsx","components/progressindicator.jsx","components/_registerpage.jsx","App.js","serviceWorker.js","index.js"],"names":["Backend","XMLHttpFactories","XMLHttpRequest","window","ActiveXObject","url","callbackI18n","xhr","this","createXHR","open","send","onreadystatechange","readyState","status","console","log","statusText","JSON","parse","responseText","oForm","onResponse","onUpdateProgress","onError","require","oData","FormData","fullNameEncoded","encodeURI","get","emailEncoded","messageEncoded","adressEncoded","adressEngEncoded","categoryEncoded","egrulEncoded","innEncoded","kppEncoded","nameEngEncoded","ogrnEncoded","oktmoEncoded","shortNameEncoded","tokenEncoded","append","upload","addEventListener","xmlhttp","i","length","e","InputComponent","inputField","changeClass","element","oldClass","newClass","classList","remove","add","Component","InputEmail","handleChange","props","onChange","validateValue","target","input","email","value","result","test","String","toLowerCase","setValid","setInvalid","onValidate","className","type","id","name","placeholder","required","stylename","invalidMessage","InputSendBtn","Fragment","Button","color","size","block","caption","InputFullname","minLen","shouldHide","label","InputShortname","InputKpp","maxlength","maxLen","InputInn","InputOgrn","InputOktmo","InputEgrul","InputToken","InputNameEng","InputAdress","InputAdressEng","InputCategory","items","map","item","key","htmlFor","text","Number","parseInt","InputCaptcha","state","backend","oResult","response","captchaPassed","event","index","src","indexOf","slice","Date","getTime","alt","onClick","handleImageClick","FeedbackForm","form","React","createRef","attachList","fullName","category","message","checkCode","validate","fullname","resident","handleChanges","setState","current","handleSubmit","preventDefault","Object","values","includes","isValid","onSubmit","handleValidate","param","i18n","Form","noValidate","innerRef","Row","Col","md","order","Card","body","CardBody","formFields","validation","emptyValue","shortName","kpp","inn","ogrn","oktmo","egrul","engName","adress","adressEng","token","captcha","emptyOrIncorrect","btnSend","ProgressIndicator","role","aria-valuenow","aria-valuemin","aria-valuemax","style","width","RegisterPage","asyncSubmit","handleResponse","handleProgress","handleError","oResponse","exceptionMessage","headtext","requestCategory","success","lengthComputable","percentage","Math","round","loaded","total","progress","progressIndicator","httpError","errors","headText","undefined","ie","version","content","oldBrowser","App","i18n_ru","updateI18n","register","Spinner","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.223ecdda.chunk.js","sourcesContent":["class Backend {\r\n  XMLHttpFactories = [\r\n    () => {\r\n      return new XMLHttpRequest();\r\n    },\r\n    () => {\r\n      return new window.ActiveXObject(\"Msxml2.XMLHTTP\");\r\n    },\r\n    () => {\r\n      return new window.ActiveXObject(\"Msxml3.XMLHTTP\");\r\n    },\r\n    () => {\r\n      return new window.ActiveXObject(\"Microsoft.XMLHTTP\");\r\n    }\r\n  ];\r\n\r\n  getI18n(url, callbackI18n) {\r\n    const xhr = this.createXHR();\r\n    xhr.open(\"GET\", url, true);\r\n    xhr.send();\r\n\r\n    xhr.onreadystatechange = () => {\r\n      if (xhr.readyState !== 4) {\r\n        return false;\r\n      }\r\n\r\n      if (xhr.status !== 200) {\r\n        console.log(xhr.status + \": \" + xhr.statusText);\r\n      } else {\r\n        callbackI18n(JSON.parse(xhr.responseText));\r\n      }\r\n    };\r\n  }\r\n\r\n  asyncSubmit(oForm, url, onResponse, onUpdateProgress, onError) {\r\n    const xhr = this.createXHR();\r\n    require(\"formdata-polyfill\");\r\n    let oData = new FormData(oForm);\r\n\r\n    const fullNameEncoded = encodeURI(oData.get(\"fullName\"));\r\n    const emailEncoded = encodeURI(oData.get(\"email\"));\r\n    const messageEncoded = encodeURI(oData.get(\"message\"));\r\n    const adressEncoded = encodeURI(oData.get(\"adress\"));\r\n    const adressEngEncoded = encodeURI(oData.get(\"adressEng\"));\r\n    const categoryEncoded = encodeURI(oData.get(\"category\"));\r\n    const egrulEncoded = encodeURI(oData.get(\"egrul\"));\r\n    const innEncoded = encodeURI(oData.get(\"inn\"));\r\n    const kppEncoded = encodeURI(oData.get(\"kpp\"));\r\n    const nameEngEncoded = encodeURI(oData.get(\"nameEng\"));\r\n    const ogrnEncoded = encodeURI(oData.get(\"ogrn\"));\r\n    const oktmoEncoded = encodeURI(oData.get(\"oktmo\"));\r\n    const shortNameEncoded = encodeURI(oData.get(\"shortName\"));\r\n    const tokenEncoded = encodeURI(oData.get(\"token\"));\r\n\r\n    oData.append(\"fullNameEncoded\", fullNameEncoded);\r\n    oData.append(\"emailEncoded\", emailEncoded);\r\n    oData.append(\"messageEncoded\", messageEncoded);\r\n    oData.append(\"adressEncoded\", adressEncoded);\r\n    oData.append(\"adressEngEncoded\", adressEngEncoded);\r\n    oData.append(\"categoryEncoded\", categoryEncoded);\r\n    oData.append(\"egrulEncoded\", egrulEncoded);\r\n    oData.append(\"innEncoded\", innEncoded);\r\n    oData.append(\"kppEncoded\", kppEncoded);\r\n    oData.append(\"nameEngEncoded\", nameEngEncoded);\r\n    oData.append(\"ogrnEncoded\", ogrnEncoded);\r\n    oData.append(\"oktmoEncoded\", oktmoEncoded);\r\n    oData.append(\"shortNameEncoded\", shortNameEncoded);\r\n    oData.append(\"tokenEncoded\", tokenEncoded);\r\n\r\n    xhr.open(\"POST\", url, true);\r\n    xhr.upload.addEventListener(\"progress\", onUpdateProgress, false);\r\n\r\n    xhr.send(oData);\r\n    xhr.onreadystatechange = () => {\r\n      console.log(xhr.status);\r\n      if (xhr.readyState !== 4) {\r\n        return false;\r\n      }\r\n\r\n      if (xhr.status !== 200) {\r\n        onError(xhr.status);\r\n      } else {\r\n        onResponse(JSON.parse(xhr.responseText));\r\n      }\r\n    };\r\n  }\r\n\r\n  createXHR() {\r\n    let xmlhttp = false;\r\n    for (let i = 0; i < this.XMLHttpFactories.length; i++) {\r\n      try {\r\n        xmlhttp = this.XMLHttpFactories[i]();\r\n      } catch (e) {\r\n        continue;\r\n      }\r\n      break;\r\n    }\r\n    return xmlhttp;\r\n  }\r\n}\r\nexport default Backend;\r\n","import { Component } from \"react\";\r\n\r\nclass InputComponent extends Component {\r\n  setInvalid(inputField) {\r\n    this.changeClass(inputField, \"is-valid\", \"is-invalid\");\r\n  }\r\n\r\n  setValid(inputField) {\r\n    this.changeClass(inputField, \"is-invalid\", \"is-valid\");\r\n  }\r\n\r\n  changeClass(element, oldClass, newClass) {\r\n    try {\r\n      element.classList.remove(oldClass);\r\n      element.classList.add(newClass);\r\n    } catch (e) {\r\n      console.log(\"Exception [changeClass]\", e);\r\n    }\r\n  }\r\n}\r\n\r\nexport default InputComponent;\r\n","import React from \"react\";\r\nimport InputComponent from \"./inputcomponent\";\r\n\r\nclass InputEmail extends InputComponent {\r\n  handleChange = e => {\r\n    // fire the form change event\r\n    this.props.onChange(e);\r\n    this.validateValue(e.target);\r\n  };\r\n\r\n  validateValue(input) {\r\n    const re = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n    const email = input.value;\r\n    let result = false;\r\n\r\n    if (re.test(String(email).toLowerCase())) {\r\n      result = true;\r\n      this.setValid(input);\r\n    } else {\r\n      this.setInvalid(input);\r\n    }\r\n    console.log(\"validateEmail:\" + result);\r\n    this.props.onValidate(result);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"mb-3\">\r\n        {/* <label htmlFor=\"email\">{this.props.label}</label> */}\r\n        <div className=\"input-group\">\r\n          <div className=\"input-group-prepend\">\r\n            <span className=\"input-group-text\">@</span>\r\n          </div>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"email\"\r\n            name=\"email\"\r\n            placeholder={this.props.placeholder}\r\n            onChange={this.handleChange}\r\n            value={this.props.value}\r\n            required\r\n          />\r\n          <div className=\"invalid-feedback\" stylename=\"width: 100%\">\r\n            {this.props.invalidMessage}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InputEmail;\r\n","import React, { Component } from \"react\";\r\nimport { Button } from \"reactstrap\";\r\n\r\nclass InputSendBtn extends Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Button color=\"primary\" size=\"lg\" block>\r\n          {this.props.caption}\r\n        </Button>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InputSendBtn;\r\n","import React from \"react\";\r\nimport InputComponent from \"./inputcomponent\";\r\n\r\nclass InputFullname extends InputComponent {\r\n  handleChange = e => {\r\n    // fire the form change event\r\n    this.props.onChange(e);\r\n    this.validateValue(e.target);\r\n  };\r\n\r\n  validateValue(input) {\r\n    let result = false;\r\n    const minLen = this.props.minLen;\r\n    const value = input.value;\r\n\r\n    if (value && value.length >= minLen) {\r\n      result = true;\r\n      this.setValid(input);\r\n    } else {\r\n      this.setInvalid(input);\r\n    }\r\n    this.props.onValidate(result);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={this.props.shouldHide ? 'mb-3 hidden' : 'mb-3'} >\r\n        {/* <label htmlFor=\"fullName\">{this.props.label}</label> */}\r\n        <div className=\"floating-label-group\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"fullName\"\r\n            name=\"fullName\"\r\n            required\r\n            onChange={this.handleChange}\r\n            value={this.props.value}\r\n          />\r\n          <span className=\"floating-label\">{this.props.label}</span>\r\n          <div className=\"invalid-feedback\" stylename=\"width: 100%\">\r\n            {this.props.invalidMessage}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InputFullname;\r\n","import React from \"react\";\r\nimport InputComponent from \"./inputcomponent\";\r\n\r\nclass InputShortname extends InputComponent {\r\n  handleChange = e => {\r\n    // fire the form change event\r\n    this.props.onChange(e);\r\n    this.validateValue(e.target);\r\n  };\r\n\r\n  validateValue(input) {\r\n    let result = false;\r\n    const minLen = this.props.minLen;\r\n    const value = input.value;\r\n\r\n    if (value && value.length >= minLen) {\r\n      result = true;\r\n      this.setValid(input);\r\n    } else {\r\n      this.setInvalid(input);\r\n    }\r\n    this.props.onValidate(result);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={this.props.shouldHide ? 'mb-3 hidden' : 'mb-3'} >\r\n        {/* <label htmlFor=\"shortName\">{this.props.label}</label> */}\r\n        <div className=\"floating-label-group\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"shortName\"\r\n            name=\"shortName\"\r\n            required\r\n            onChange={this.handleChange}\r\n            value={this.props.value}\r\n          />\r\n          <span className=\"floating-label\">{this.props.label}</span>\r\n          <div className=\"invalid-feedback\" stylename=\"width: 100%\">\r\n            {this.props.invalidMessage}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InputShortname;\r\n","import React from \"react\";\r\nimport InputComponent from \"./inputcomponent\";\r\n\r\nclass InputKpp extends InputComponent {\r\n  handleChange = e => {\r\n    // fire the form change event\r\n    this.props.onChange(e);\r\n    this.validateValue(e.target);\r\n  };\r\n\r\n  validateValue(input) {\r\n    let result = false;\r\n    const minLen = this.props.minLen;\r\n    const value = input.value;\r\n\r\n    if (value && value.length >= minLen) {\r\n      result = true;\r\n      this.setValid(input);\r\n    } else {\r\n      this.setInvalid(input);\r\n    }\r\n    this.props.onValidate(result);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={this.props.shouldHide ? 'mb-3 hidden' : 'mb-3'} >\r\n        {/* <label htmlFor=\"kpp\">{this.props.label}</label> */}\r\n        <div className=\"floating-label-group\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"kpp\"\r\n            name=\"kpp\"\r\n            required\r\n            onChange={this.handleChange}\r\n            value={this.props.value}\r\n            maxlength={this.props.maxLen}\r\n          />\r\n          <span className=\"floating-label\">{this.props.label}</span>\r\n          <div className=\"invalid-feedback\" stylename=\"width: 100%\">\r\n            {this.props.invalidMessage}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InputKpp;\r\n","import React from \"react\";\r\nimport InputComponent from \"./inputcomponent\";\r\n\r\nclass InputInn extends InputComponent {\r\n  handleChange = e => {\r\n    // fire the form change event\r\n    this.props.onChange(e);\r\n    this.validateValue(e.target);\r\n  };\r\n\r\n  validateValue(input) {\r\n    let result = false;\r\n    const minLen = this.props.minLen;\r\n    const value = input.value;\r\n\r\n    if (value && value.length >= minLen) {\r\n      result = true;\r\n      this.setValid(input);\r\n    } else {\r\n      this.setInvalid(input);\r\n    }\r\n    this.props.onValidate(result);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={this.props.shouldHide ? 'mb-3 hidden' : 'mb-3'} >\r\n        {/* <label htmlFor=\"inn\">{this.props.label}</label> */}\r\n        <div className=\"floating-label-group\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"inn\"\r\n            name=\"inn\"\r\n            required\r\n            onChange={this.handleChange}\r\n            value={this.props.value}\r\n            maxlength={this.props.maxLen}\r\n          />\r\n          <span className=\"floating-label\">{this.props.label}</span>\r\n          <div className=\"invalid-feedback\" stylename=\"width: 100%\">\r\n            {this.props.invalidMessage}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InputInn;\r\n","import React from \"react\";\r\nimport InputComponent from \"./inputcomponent\";\r\n\r\nclass InputOgrn extends InputComponent {\r\n  handleChange = e => {\r\n    // fire the form change event\r\n    this.props.onChange(e);\r\n    this.validateValue(e.target);\r\n  };\r\n\r\n  validateValue(input) {\r\n    let result = false;\r\n    const minLen = this.props.minLen;\r\n    const value = input.value;\r\n\r\n    if (value && value.length >= minLen) {\r\n      result = true;\r\n      this.setValid(input);\r\n    } else {\r\n      this.setInvalid(input);\r\n    }\r\n    this.props.onValidate(result);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={this.props.shouldHide ? 'mb-3 hidden' : 'mb-3'} >\r\n        {/* <label htmlFor=\"ogrn\">{this.props.label}</label> */}\r\n        <div className=\"floating-label-group\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"ogrn\"\r\n            name=\"ogrn\"\r\n            required\r\n            onChange={this.handleChange}\r\n            value={this.props.value}\r\n            maxlength={this.props.maxLen}\r\n          />\r\n          <span className=\"floating-label\">{this.props.label}</span>\r\n          <div className=\"invalid-feedback\" stylename=\"width: 100%\">\r\n            {this.props.invalidMessage}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InputOgrn;\r\n","import React from \"react\";\r\nimport InputComponent from \"./inputcomponent\";\r\n\r\nclass InputOktmo extends InputComponent {\r\n  handleChange = e => {\r\n    // fire the form change event\r\n    this.props.onChange(e);\r\n    this.validateValue(e.target);\r\n  };\r\n\r\n  validateValue(input) {\r\n    let result = false;\r\n    const minLen = this.props.minLen;\r\n    const value = input.value;\r\n\r\n    if (value && value.length >= minLen) {\r\n      result = true;\r\n      this.setValid(input);\r\n    } else {\r\n      this.setInvalid(input);\r\n    }\r\n    this.props.onValidate(result);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={this.props.shouldHide ? 'mb-3 hidden' : 'mb-3'} >\r\n        {/* <label htmlFor=\"oktmo\">{this.props.label}</label> */}\r\n        <div className=\"floating-label-group\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"oktmo\"\r\n            name=\"oktmo\"\r\n            required\r\n            onChange={this.handleChange}\r\n            value={this.props.value}\r\n            maxlength={this.props.maxLen}\r\n          />\r\n          <span className=\"floating-label\">{this.props.label}</span>\r\n          <div className=\"invalid-feedback\" stylename=\"width: 100%\">\r\n            {this.props.invalidMessage}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InputOktmo;\r\n","import React from \"react\";\r\nimport InputComponent from \"./inputcomponent\";\r\n\r\nclass InputEgrul extends InputComponent {\r\n  handleChange = e => {\r\n    // fire the form change event\r\n    this.props.onChange(e);\r\n    this.validateValue(e.target);\r\n  };\r\n\r\n  validateValue(input) {\r\n    let result = false;\r\n    const minLen = this.props.minLen;\r\n    const value = input.value;\r\n\r\n    if (value && value.length >= minLen) {\r\n      result = true;\r\n      this.setValid(input);\r\n    } else {\r\n      this.setInvalid(input);\r\n    }\r\n    this.props.onValidate(result);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={this.props.shouldHide ? 'mb-3 hidden' : 'mb-3'} >\r\n        {/* <label htmlFor=\"egrul\">{this.props.label}</label> */}\r\n        <div className=\"floating-label-group\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"egrul\"\r\n            name=\"egrul\"\r\n            required\r\n            onChange={this.handleChange}\r\n            value={this.props.value}\r\n            maxlength={this.props.maxLen}\r\n          />\r\n          <span className=\"floating-label\">{this.props.label}</span>\r\n          <div className=\"invalid-feedback\" stylename=\"width: 100%\">\r\n            {this.props.invalidMessage}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InputEgrul;\r\n","import React from \"react\";\r\nimport InputComponent from \"./inputcomponent\";\r\n\r\nclass InputToken extends InputComponent {\r\n  handleChange = e => {\r\n    // fire the form change event\r\n    this.props.onChange(e);\r\n    this.validateValue(e.target);\r\n  };\r\n\r\n  validateValue(input) {\r\n    let result = false;\r\n    const minLen = this.props.minLen;\r\n    const value = input.value;\r\n\r\n    if (value && value.length >= minLen) {\r\n      result = true;\r\n      this.setValid(input);\r\n    } else {\r\n      this.setInvalid(input);\r\n    }\r\n    this.props.onValidate(result);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={this.props.shouldHide ? 'mb-3 hidden' : 'mb-3'} >\r\n        {/* <label htmlFor=\"egrul\">{this.props.label}</label> */}\r\n        <div className=\"floating-label-group\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"token\"\r\n            name=\"token\"\r\n            onChange={this.handleChange}\r\n            value={this.props.value}\r\n            maxlength={this.props.maxLen}\r\n          />\r\n          {/* required */}\r\n          <span className=\"floating-label\">{this.props.label}</span>\r\n          <div className=\"invalid-feedback\" stylename=\"width: 100%\">\r\n            {this.props.invalidMessage}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InputToken;\r\n","import React from \"react\";\r\nimport InputComponent from \"./inputcomponent\";\r\n\r\nclass InputNameEng extends InputComponent {\r\n  handleChange = e => {\r\n    // fire the form change event\r\n    this.props.onChange(e);\r\n    this.validateValue(e.target);\r\n  };\r\n\r\n  validateValue(input) {\r\n    let result = false;\r\n    const minLen = this.props.minLen;\r\n    const value = input.value;\r\n\r\n    if (value && value.length >= minLen) {\r\n      result = true;\r\n      this.setValid(input);\r\n    } else {\r\n      this.setInvalid(input);\r\n    }\r\n    this.props.onValidate(result);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={this.props.shouldHide ? 'mb-3 hidden' : 'mb-3'} >\r\n        {/* <label htmlFor=\"nameEng\">{this.props.label}</label> */}\r\n        <div className=\"floating-label-group\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"nameEng\"\r\n            name=\"nameEng\"\r\n            required\r\n            onChange={this.handleChange}\r\n            value={this.props.value}\r\n          />\r\n          <span className=\"floating-label\">{this.props.label}</span>\r\n          <div className=\"invalid-feedback\" stylename=\"width: 100%\">\r\n            {this.props.invalidMessage}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InputNameEng;\r\n","import React from \"react\";\r\nimport InputComponent from \"./inputcomponent\";\r\n\r\nclass InputAdress extends InputComponent {\r\n  handleChange = e => {\r\n    // fire the form change event\r\n    this.props.onChange(e);\r\n    this.validateValue(e.target);\r\n  };\r\n\r\n  validateValue(input) {\r\n    let result = false;\r\n    const minLen = this.props.minLen;\r\n    const value = input.value;\r\n\r\n    if (value && value.length >= minLen) {\r\n      result = true;\r\n      this.setValid(input);\r\n    } else {\r\n      this.setInvalid(input);\r\n    }\r\n    this.props.onValidate(result);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={this.props.shouldHide ? 'mb-3 hidden' : 'mb-3'} >\r\n        {/* <label htmlFor=\"adress\" class=\"floating-label\">{this.props.label}</label> */}\r\n        <div className=\"floating-label-group\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"adress\"\r\n            name=\"adress\"\r\n            required\r\n            onChange={this.handleChange}\r\n            value={this.props.value}\r\n          />\r\n          <span className=\"floating-label\">{this.props.label}</span>\r\n          <div className=\"invalid-feedback\" stylename=\"width: 100%\">\r\n            {this.props.invalidMessage}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InputAdress;\r\n","import React from \"react\";\r\nimport InputComponent from \"./inputcomponent\";\r\n\r\nclass InputAdressEng extends InputComponent {\r\n  handleChange = e => {\r\n    // fire the form change event\r\n    this.props.onChange(e);\r\n    this.validateValue(e.target);\r\n  };\r\n\r\n  validateValue(input) {\r\n    let result = false;\r\n    const minLen = this.props.minLen;\r\n    const value = input.value;\r\n\r\n    if (value && value.length >= minLen) {\r\n      result = true;\r\n      this.setValid(input);\r\n    } else {\r\n      this.setInvalid(input);\r\n    }\r\n    this.props.onValidate(result);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={this.props.shouldHide ? 'mb-3 hidden' : 'mb-3'} >\r\n        {/* <label htmlFor=\"adressEng\">{this.props.label}</label> */}\r\n        <div className=\"floating-label-group\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"adressEng\"\r\n            name=\"adressEng\"\r\n            required\r\n            onChange={this.handleChange}\r\n            value={this.props.value}\r\n          />\r\n          <span className=\"floating-label\">{this.props.label}</span>\r\n          <div className=\"invalid-feedback\" stylename=\"width: 100%\">\r\n            {this.props.invalidMessage}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InputAdressEng;\r\n","import React from \"react\";\r\nimport InputComponent from \"./inputcomponent\";\r\n\r\nclass InputCategory extends InputComponent {\r\n  handleChange = e => {\r\n    // fire the form change event\r\n    this.props.onChange(e);\r\n    this.validateValue();\r\n  };\r\n\r\n  validateValue = () => {\r\n    this.props.onValidate(true);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <h5 className=\"mb-3\">{this.props.label}</h5>\r\n        <div className=\"d-block my-3\">\r\n          {this.props.items.map(item => (\r\n            <div key={item.id} className=\"custom-control custom-switch\">\r\n              {/* checked={item.checked} */}\r\n              <input\r\n                id={item.id}\r\n                key={item.id}\r\n                value={item.id}\r\n                name=\"category\"\r\n                type=\"radio\"\r\n                className=\"form-control custom-control-input\"\r\n                onChange={this.handleChange}\r\n                required\r\n              />\r\n\r\n              <label className=\"custom-control-label\" htmlFor={item.id}>\r\n                {item.text}\r\n              </label>\r\n\r\n              {this.props.items.length - 1 === Number.parseInt(item.id) && (\r\n                <div className=\"invalid-feedback\" stylename=\"width: 100%\">\r\n                  {this.props.invalidMessage}\r\n                </div>\r\n              )}\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <hr className=\"mb-4\" />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InputCategory;\r\n","import React from \"react\";\r\nimport InputComponent from \"./inputcomponent\";\r\nimport Backend from \"./backend\";\r\n\r\nclass InputCaptcha extends InputComponent {\r\n  state = {};\r\n  backend = new Backend();\r\n\r\n  handleChange = e => {\r\n    // fire the form change event\r\n    this.props.onChange(e);\r\n    this.validateValue(e.target);\r\n  };\r\n\r\n  validateValue(inputField) {\r\n    const xhr = this.backend.createXHR();\r\n\r\n    xhr.open(\r\n      \"GET\",\r\n      \"/NDI_EPCOMMON_D~gzpn~regform~service~rs~gazprom-neft.ru/rs/regform/checkcaptcha/\" +\r\n        inputField.value,\r\n      true\r\n    );\r\n\r\n    xhr.send();\r\n    xhr.onreadystatechange = () => {\r\n      let result = false;\r\n      console.log(xhr.status);\r\n      if (xhr.readyState !== 4) {\r\n        return false;\r\n      }\r\n      if (xhr.status !== 200) {\r\n        this.setInvalid(inputField);\r\n      } else {\r\n        const oResult = JSON.parse(xhr.responseText);\r\n        console.log(oResult);\r\n        console.log(\"oResult.captchaPassed\", oResult.response.captchaPassed);\r\n        if (oResult.response.captchaPassed === true) {\r\n          this.setValid(inputField);\r\n          result = true;\r\n        } else {\r\n          this.setInvalid(inputField);\r\n        }\r\n      }\r\n\r\n      this.props.onValidate(result);\r\n    };\r\n  }\r\n\r\n  handleImageClick(event) {\r\n    let index = event.target.src.indexOf(\"?t=\");\r\n    let url = event.target.src;\r\n    if (index > -1) {\r\n      url = url.slice(0, index);\r\n    }\r\n\r\n    event.target.src = \"\";\r\n    event.target.src = url + \"?t=\" + new Date().getTime();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <hr className=\"mt-4\" />\r\n\r\n        <div className=\"mb-3\">\r\n          <div className=\"input-group\">\r\n            <div className=\"input-group-prepend\">\r\n              <img\r\n                id=\"captchaid\"\r\n                alt=\"\"\r\n                src=\"/NDI_EPCOMMON_D~gzpn~regform~service~rs~gazprom-neft.ru/rs/regform/captcha\"\r\n                className=\"gzpn-captcha-img\"\r\n                onClick={this.handleImageClick}\r\n              />\r\n            </div>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"checkCode\"\r\n              name=\"checkCode\"\r\n              placeholder={this.props.placeholder}\r\n              required\r\n              value={this.props.value}\r\n              onChange={this.handleChange}\r\n            />\r\n            <div className=\"invalid-feedback\" stylename=\"width: 100%\">\r\n              {this.props.invalidMessage}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-3 mb-3\" />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InputCaptcha;\r\n","import React, { Component } from \"react\";\r\nimport InputEmail from \"./_inputemail\";\r\nimport InputSendBtn from \"./inputsendbtn\";\r\nimport InputFullname from \"./_inputfullname\";\r\nimport InputShortname from \"./_inputshortname\";\r\nimport InputKpp from \"./_inputkpp\";\r\nimport InputInn from \"./_inputinn\";\r\nimport InputOgrn from \"./_inputogrn\";\r\nimport InputOktmo from \"./_inputoktmo\";\r\nimport InputEgrul from \"./_inputegrul\";\r\nimport InputToken from \"./_inputtoken\";\r\nimport InputEngName from \"./_inputnameeng\";\r\nimport InputAdress from \"./_inputadress\";\r\nimport InputAdressEng from \"./_inputadresseng\";\r\n\r\nimport { Form, Col, Row, Card, CardBody, Button } from \"reactstrap\";\r\nimport InputCategory from \"./_inputcategory\";\r\nimport InputCaptcha from \"./inputcaptcha\";\r\n//import TextareaMessage from \"./textareamessage\";\r\n//import AttachmentList from \"./attachments\";\r\n\r\nclass FeedbackForm extends Component {\r\n  form = React.createRef();\r\n  attachList = React.createRef();\r\n\r\n  state = {\r\n    fullName: \"\",\r\n    email: \"\",\r\n    category: \"\",\r\n    message: \"\",\r\n    checkCode: \"\",\r\n    validate: {\r\n      fullname: false,\r\n      email: false,\r\n      category: false,\r\n      message: false,\r\n      checkCode: false\r\n    },\r\n\r\n    resident: true\r\n    //activeTab: \"1\"\r\n  };\r\n\r\n  handleChanges = e => {\r\n    const target = e.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n\r\n    //hide other fields\r\n    if (name === \"category\") {\r\n      if (value === \"0\") {\r\n        this.setState({ resident: true })\r\n      } else {\r\n        this.setState({ resident: false })\r\n      }\r\n    }\r\n    // remove form's top validated style\r\n    this.form.current.classList.remove(\"was-validated\");\r\n  };\r\n\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const isValid =\r\n      !Object.values(this.state.validate).includes(false) &&\r\n      this.attachList.current.isValid();\r\n\r\n    if (isValid) {\r\n      this.props.onSubmit(e.target);\r\n    } else {\r\n      e.target.classList.add(\"was-validated\");\r\n    }\r\n  };\r\n\r\n  handleValidate = (param, isValid) => {\r\n    let validate = { ...this.state.validate };\r\n    validate[param] = isValid;\r\n    this.setState({ validate: validate });\r\n  };\r\n\r\n  render() {\r\n    const i18n = this.props.i18n;\r\n\r\n    return (\r\n      <Form noValidate onSubmit={this.handleSubmit} innerRef={this.form}>\r\n        <Row>\r\n          {/* <AttachmentList\r\n            ref={this.attachList}\r\n            caption={i18n.attachmentList.caption}\r\n            btnlabel={i18n.attachmentList.addAttachment.label}\r\n            totalLabel={i18n.attachmentList.total}\r\n            maxFiles={i18n.attachmentList.maxFiles}\r\n            maxTotalFileSizeMb={i18n.attachmentList.maxTotalFileSizeMb}\r\n            invalidTotalFileSize={\r\n              i18n.attachmentList.validation.maxTotalFileSizeMb\r\n            }\r\n            invalidFilesCount={i18n.attachmentList.validation.maxFiles}\r\n          /> */}\r\n          <Col md={{ size: 12, order: 1 }}>\r\n\r\n            <Card body>\r\n\r\n              <CardBody>\r\n\r\n                <InputCategory\r\n                  onValidate={isValid => this.handleValidate(\"category\", isValid)}\r\n                  onChange={this.handleChanges}\r\n                  items={i18n.formFields.category.items}\r\n                  label={i18n.formFields.category.label}\r\n                  invalidMessage={i18n.formFields.category.validation.emptyValue}\r\n                />\r\n\r\n                <InputFullname\r\n                  value={this.state.fullname}\r\n                  onValidate={isValid => this.handleValidate(\"fullname\", isValid)}\r\n                  onChange={this.handleChanges}\r\n                  label={i18n.formFields.fullName.label}\r\n                  placeholder={i18n.formFields.fullName.placeholder}\r\n                  invalidMessage={i18n.formFields.fullName.validation.emptyValue}\r\n                  minLen={i18n.formFields.fullName.validation.minLen}\r\n                />\r\n\r\n                <div id=\"resident-info\" className={this.state.resident ? '' : 'hidden'}>\r\n                  <InputShortname\r\n                    value={this.state.shortName}\r\n                    onValidate={isValid => this.handleValidate(\"shortName\", isValid)}\r\n                    onChange={this.handleChanges}\r\n                    label={i18n.formFields.shortName.label}\r\n                    placeholder={i18n.formFields.shortName.placeholder}\r\n                    invalidMessage={i18n.formFields.shortName.validation.emptyValue}\r\n                    minLen={i18n.formFields.shortName.validation.minLen}\r\n                  />\r\n\r\n                  <InputKpp\r\n                    value={this.state.kpp}\r\n                    onValidate={isValid => this.handleValidate(\"kpp\", isValid)}\r\n                    onChange={this.handleChanges}\r\n                    label={i18n.formFields.kpp.label}\r\n                    placeholder={i18n.formFields.kpp.placeholder}\r\n                    invalidMessage={i18n.formFields.kpp.validation.emptyValue}\r\n                    minLen={i18n.formFields.kpp.validation.minLen}\r\n                    maxLen={i18n.formFields.kpp.validation.maxLen}\r\n                  />\r\n\r\n                  <InputInn\r\n                    value={this.state.inn}\r\n                    onValidate={isValid => this.handleValidate(\"inn\", isValid)}\r\n                    onChange={this.handleChanges}\r\n                    label={i18n.formFields.inn.label}\r\n                    placeholder={i18n.formFields.inn.placeholder}\r\n                    invalidMessage={i18n.formFields.inn.validation.emptyValue}\r\n                    minLen={i18n.formFields.inn.validation.minLen}\r\n                    maxLen={i18n.formFields.inn.validation.maxLen}\r\n                  />\r\n\r\n                  <InputOgrn\r\n                    value={this.state.ogrn}\r\n                    onValidate={isValid => this.handleValidate(\"ogrn\", isValid)}\r\n                    onChange={this.handleChanges}\r\n                    label={i18n.formFields.ogrn.label}\r\n                    placeholder={i18n.formFields.ogrn.placeholder}\r\n                    invalidMessage={i18n.formFields.ogrn.validation.emptyValue}\r\n                    minLen={i18n.formFields.ogrn.validation.minLen}\r\n                    maxLen={i18n.formFields.ogrn.validation.maxLen}\r\n                  />\r\n\r\n                  <InputOktmo\r\n                    value={this.state.oktmo}\r\n                    onValidate={isValid => this.handleValidate(\"oktmo\", isValid)}\r\n                    onChange={this.handleChanges}\r\n                    label={i18n.formFields.oktmo.label}\r\n                    placeholder={i18n.formFields.oktmo.placeholder}\r\n                    invalidMessage={i18n.formFields.oktmo.validation.emptyValue}\r\n                    minLen={i18n.formFields.oktmo.validation.minLen}\r\n                    maxLen={i18n.formFields.oktmo.validation.maxLen}\r\n                  />\r\n\r\n                  <InputEgrul\r\n                    value={this.state.egrul}\r\n                    onValidate={isValid => this.handleValidate(\"egrul\", isValid)}\r\n                    onChange={this.handleChanges}\r\n                    label={i18n.formFields.egrul.label}\r\n                    placeholder={i18n.formFields.egrul.placeholder}\r\n                    invalidMessage={i18n.formFields.egrul.validation.emptyValue}\r\n                    minLen={i18n.formFields.egrul.validation.minLen}\r\n                    maxLen={i18n.formFields.egrul.validation.maxLen}\r\n                  />\r\n\r\n                </div>\r\n\r\n                <div id=\"no-resident-info\" className={this.state.resident ? 'hidden' : ''}>\r\n                  <InputEngName\r\n                    value={this.state.engName}\r\n                    onValidate={isValid => this.handleValidate(\"engName\", isValid)}\r\n                    onChange={this.handleChanges}\r\n                    label={i18n.formFields.engName.label}\r\n                    placeholder={i18n.formFields.engName.placeholder}\r\n                    invalidMessage={i18n.formFields.engName.validation.emptyValue}\r\n                    minLen={i18n.formFields.engName.validation.minLen}\r\n                  />\r\n\r\n                  <InputAdress\r\n                    value={this.state.adress}\r\n                    onValidate={isValid => this.handleValidate(\"adress\", isValid)}\r\n                    onChange={this.handleChanges}\r\n                    label={i18n.formFields.adress.label}\r\n                    placeholder={i18n.formFields.adress.placeholder}\r\n                    invalidMessage={i18n.formFields.adress.validation.emptyValue}\r\n                    minLen={i18n.formFields.adress.validation.minLen}\r\n                  />\r\n\r\n                  <InputAdressEng\r\n                    value={this.state.adressEng}\r\n                    onValidate={isValid => this.handleValidate(\"adressEng\", isValid)}\r\n                    onChange={this.handleChanges}\r\n                    label={i18n.formFields.adressEng.label}\r\n                    placeholder={i18n.formFields.adressEng.placeholder}\r\n                    invalidMessage={i18n.formFields.adressEng.validation.emptyValue}\r\n                    minLen={i18n.formFields.adressEng.validation.minLen}\r\n                  />\r\n                </div>\r\n\r\n                <InputToken\r\n                    value={this.state.token}\r\n                    onValidate={isValid => this.handleValidate(\"token\", isValid)}\r\n                    onChange={this.handleChanges}\r\n                    label={i18n.formFields.token.label}\r\n                    placeholder={i18n.formFields.token.placeholder}\r\n                    invalidMessage={i18n.formFields.token.validation.emptyValue}\r\n                    minLen={i18n.formFields.token.validation.minLen}\r\n                    maxLen={i18n.formFields.token.validation.maxLen}\r\n                  />\r\n\r\n                <InputEmail\r\n                  value={this.state.email}\r\n                  onValidate={isValid => this.handleValidate(\"email\", isValid)}\r\n                  onChange={this.handleChanges}\r\n                  label={i18n.formFields.email.label}\r\n                  placeholder={i18n.formFields.email.placeholder}\r\n                  invalidMessage={i18n.formFields.email.validation.emptyValue}\r\n                />\r\n\r\n                {/* <TextareaMessage\r\n                            value={this.state.message}\r\n                            onChange={this.handleChanges}\r\n                            onValidate={isValid => this.handleValidate(\"message\", isValid)}\r\n                            label={i18n.formFields.message.label}\r\n                            placeholder={i18n.formFields.message.placeholder}\r\n                            invalidMessage={i18n.formFields.message.validation.emptyValue}\r\n                            minLen={i18n.formFields.message.validation.minLen}\r\n                          /> */}\r\n\r\n                <InputCaptcha\r\n                  value={this.state.checkCode}\r\n                  onChange={this.handleChanges}\r\n                  onValidate={isValid => this.handleValidate(\"checkCode\", isValid)}\r\n                  placeholder={i18n.formFields.captcha.label}\r\n                  invalidMessage={\r\n                    i18n.formFields.captcha.validation.emptyOrIncorrect\r\n                  }\r\n                />\r\n                <InputSendBtn caption={i18n.formFields.btnSend.caption} />\r\n              </CardBody>\r\n\r\n              {/* <Button>Go somewhere</Button> */}\r\n            </Card>\r\n\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\nexport default FeedbackForm;\r\n","import React, { Component } from \"react\";\r\n\r\nclass ProgressIndicator extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"progress\">\r\n        <div\r\n          className=\"progress-bar progress-bar-striped progress-bar-animated\"\r\n          role=\"progressbar\"\r\n          aria-valuenow={this.props.value}\r\n          aria-valuemin=\"0\"\r\n          aria-valuemax=\"100\"\r\n          style={{ width: this.props.value + \"%\" }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProgressIndicator;\r\n","import React, { Component } from \"react\";\r\n//import FeedbackForm from \"./feedbackform\";\r\nimport RegForm from \"./_regform\";\r\nimport Backend from \"./backend\";\r\nimport ProgressIndicator from \"./progressindicator\";\r\n\r\nclass RegisterPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      headtext: props.i18n.headText,\r\n      status: undefined,\r\n      progress: undefined,\r\n      httpError: undefined\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    let ie = require(\"ie-version\");\r\n    if (ie.version && ie.version <= 9) {\r\n      this.setState({ status: \"oldbrowser\" });\r\n    }\r\n  }\r\n\r\n  handleSubmit = oForm => {\r\n    const backend = new Backend();\r\n    const url =\r\n      \"/NDI_EPCOMMON_D~gzpn~regform~service~rs~gazprom-neft.ru/rs/regform/\";\r\n    backend.asyncSubmit(\r\n      oForm,\r\n      url,\r\n      this.handleResponse,\r\n      this.handleProgress,\r\n      this.handleError\r\n    );\r\n  };\r\n\r\n  handleResponse = oResponse => {\r\n    console.log(\"handleResponse\", oResponse);\r\n\r\n    if (oResponse.response.exceptionMessage) {\r\n      this.setState({\r\n        status: \"error\",\r\n        headtext: oResponse.response.exceptionMessage\r\n      });\r\n    } else {\r\n      console.log(\"success\", oResponse.response.requestCategory);\r\n      this.setState({\r\n        status: \"success\",\r\n        headtext: this.props.i18n.success[oResponse.response.requestCategory]\r\n      });\r\n    }\r\n  };\r\n\r\n  handleProgress = event => {\r\n    console.log(\"progressEvent\", event);\r\n    if (event.lengthComputable) {\r\n      let percentage = Math.round((event.loaded * 100) / event.total);\r\n\r\n      this.setState({\r\n        status: \"progress\",\r\n        progress: percentage,\r\n        headtext: this.props.i18n.progressIndicator.caption\r\n      });\r\n    }\r\n  };\r\n\r\n  handleError = httpError => {\r\n    this.setState({\r\n      status: \"error\",\r\n      httpError: httpError,\r\n      headtext: this.props.i18n.errors[httpError]\r\n    });\r\n  };\r\n\r\n  oldBrowser() {\r\n    return (\r\n      <React.Fragment>\r\n        <p className=\"not-supported\">\r\n          Вам необходимо обновить Ваш браузер. Используйте последние версии\r\n          Internet Explorer и Google Chrome.\r\n        </p>\r\n        <p className=\"not-supported\">\r\n          Your need to update your Browser. Use the latest versions of IE and\r\n          Google Chrome.\r\n        </p>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const i18n = this.props.i18n;\r\n    let content = undefined;\r\n\r\n    switch (this.state.status) {\r\n      case \"error\":\r\n      case \"success\":\r\n        break;\r\n      case \"oldbrowser\":\r\n        content = this.oldBrowser();\r\n        break;\r\n      case \"progress\":\r\n        content = <ProgressIndicator value={this.state.progress} />;\r\n        break;\r\n      default:\r\n        content = <RegForm i18n={i18n} onSubmit={this.handleSubmit} />;\r\n    }\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"pt-5\">\r\n          <img\r\n            className=\"d-block ml-auto mr-0 mb-4\"\r\n            src=\"/NDI_EPCOMMON_D~gzpn~regform~service~rs~gazprom-neft.ru/regform/logo.png\"\r\n            //src=\"../logo.png\"\r\n            alt=\"\"\r\n          />\r\n          <h2>{i18n.caption}</h2>\r\n          <p className=\"lead\">{this.state.headtext}</p>\r\n        </div>\r\n        {content}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RegisterPage;\r\n","import React, { Component } from \"react\";\nimport { Spinner } from \"reactstrap\";\nimport \"./App.css\";\nimport Backend from \"./components/backend\";\nimport i18n_ru from \"./i18n_ru.json\";\nimport RegisterPage from \"./components/_registerpage\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { i18n: null };\n    this.backend = new Backend();\n  }\n\n  updateI18n() {\n    this.setState({ i18n: i18n_ru });\n    //this.setState({ i18n: null });\n    // this.backend.getI18n(\n    //   \"/NDI_EPCOMMON_D~gzpn~regform~services~rs~gazprom-neft.ru/rs/regform/i18n\",\n    //   oI18n => {\n    //     this.setState({ i18n: oI18n });\n    //     document.title = oI18n.feedback.caption;\n    //   }\n    // );\n  }\n\n  componentDidMount() {\n    this.updateI18n();\n  }\n\n  render() {\n    return this.state.i18n ? (\n      <RegisterPage i18n={this.state.i18n.register} />\n    ) : (\n      <Spinner color=\"dark\" className=\"spinner\" />\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import \"react-app-polyfill/ie9\";\nimport \"react-app-polyfill/stable\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}