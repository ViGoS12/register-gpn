{"version":3,"sources":["components/backend.js","components/inputcomponent.jsx","components/_inputemail.jsx","components/inputsendbtn.jsx","components/_inputfullname.jsx","components/_inputshortname.jsx","components/_inputkpp.jsx","components/_inputinn.jsx","components/_inputtokenreg.jsx","components/_inputtoken.jsx","components/_inputemailorg.jsx","components/_inputphoneorg.jsx","components/_inputregnum.jsx","components/_inputusername.jsx","components/_inputusersecondname.jsx","components/_inputusershurname.jsx","components/_inputcategory.jsx","components/_inputip.jsx","components/_inputcheckpersdata.jsx","components/inputcaptcha.jsx","components/messagewindow.jsx","components/_regform.jsx","components/progressindicator.jsx","components/_registerpage.jsx","App.js","serviceWorker.js","index.js"],"names":["Backend","XMLHttpFactories","XMLHttpRequest","window","ActiveXObject","url","callbackI18n","xhr","this","createXHR","open","send","onreadystatechange","readyState","status","console","log","statusText","JSON","parse","responseText","oForm","onResponse","onUpdateProgress","onError","require","oData","FormData","fullNameEncoded","encodeURI","get","emailEncoded","categoryEncoded","innEncoded","kppEncoded","shortNameEncoded","tokenEncoded","userNameEncoded","userSecondNameEncoded","userSurenameEncoded","regNameEncoded","phoneOrgEncoded","emailOrgEncoded","funcEncoded1","funcEncoded2","funcEncoded3","funcEncoded4","funcEncoded5","funcEncoded6","funcEncoded7","funcEncoded8","funcEncoded9","append","upload","addEventListener","sToken","body","encodeURIComponent","setRequestHeader","xmlhttp","i","length","e","InputComponent","inputField","changeClass","element","oldClass","newClass","classList","remove","add","Component","InputEmail","handleChange","props","onChange","validateValue","target","input","email","value","result","test","String","toLowerCase","setValid","setInvalid","onValidate","className","type","id","name","placeholder","required","stylename","invalidMessage","InputSendBtn","Fragment","Button","color","size","block","caption","InputFullname","minLen","shouldHide","label","InputShortname","InputKpp","maxLength","maxLen","InputInn","InputTokenRegCheckbox","handleModalToggle","handleModal","modalTitle","modalText","checked","htmlFor","href","onClick","aboutLink","InputToken","InputEmailOrg","InputPhoneOrg","InputRegNum","InputUserName","InputUserSecondName","InputUserSurname","InputCategory","InputIP","Inputcheckpersdata","items","map","item","key","text","Number","parseInt","InputCaptcha","state","backend","oResult","response","captchaPassed","event","index","src","indexOf","slice","Date","getTime","alt","handleImageClick","MessageWindow","backdrop","Modal","isOpen","modal","toggle","ModalHeader","title","ModalBody","dangerouslySetInnerHTML","__html","ModalFooter","RegForm","form","React","createRef","category","ip","tokenReg","token","checkedItems","Map","userName","userSecondName","userSurname","checkpersdata","fullName","shortName","kpp","inn","innMaxLen","emailOrg","phoneOrg","regNum","checkCode","captchaUrl","validate","fullname","handleChanges","isChecked","setState","prevState","set","current","handleSubmit","preventDefault","onSubmit","handleValidate","param","isValid","i18n","funcData","Form","noValidate","innerRef","Row","Col","md","order","Card","style","marginBottom","CardBody","userHeader","formFields","validation","emptyValue","organizationHeader","infoMessage","textPD","captcha","emptyOrIncorrect","btnSend","ProgressIndicator","role","aria-valuenow","aria-valuemin","aria-valuemax","width","RegisterPage","scrollToMyRef","myRef","scrollTo","offsetTop","asyncSubmit","handleResponse","handleProgress","handleError","oResponse","exceptionMessage","headtext","alertText","alertColor","alertVisible","alertRef","requestCategory","hasError","lengthComputable","percentage","Math","round","loaded","total","progress","httpError","errors","handleResponseTokenVerify","verify","onDismissAlert","changeLang","lang","updateI18n","getFunctionsInputData","location","hostname","i18n_en","register","i18n_ru","getI18n","oI18n","funcData_ru","funcData_en","ofunctionData","headText","undefined","tokenVerified","search","URLSearchParams","ie","version","verifyToken","asyncSubmitVerifyToken","assign","content","outline","handleClickBack","oldBrowser","Spinner","ref","langTooltip","Alert","App","document","functionData","Boolean","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6874e0e4.chunk.js","sourcesContent":["class Backend {\r\n  XMLHttpFactories = [\r\n    () => {\r\n      return new XMLHttpRequest();\r\n    },\r\n    () => {\r\n      return new window.ActiveXObject(\"Msxml2.XMLHTTP\");\r\n    },\r\n    () => {\r\n      return new window.ActiveXObject(\"Msxml3.XMLHTTP\");\r\n    },\r\n    () => {\r\n      return new window.ActiveXObject(\"Microsoft.XMLHTTP\");\r\n    }\r\n  ];\r\n\r\n  getI18n(url, callbackI18n) {\r\n    const xhr = this.createXHR();\r\n    xhr.open(\"GET\", url, true);\r\n    xhr.send();\r\n\r\n    xhr.onreadystatechange = () => {\r\n      if (xhr.readyState !== 4) {\r\n        return false;\r\n      }\r\n\r\n      if (xhr.status !== 200) {\r\n        console.log(xhr.status + \": \" + xhr.statusText);\r\n      } else {\r\n        callbackI18n(JSON.parse(xhr.responseText));\r\n      }\r\n    };\r\n  }\r\n\r\n  asyncSubmit(oForm, url, onResponse, onUpdateProgress, onError) {\r\n    const xhr = this.createXHR();\r\n    require(\"formdata-polyfill\");\r\n    let oData = new FormData(oForm);\r\n\r\n    const fullNameEncoded = encodeURI(oData.get(\"fullName\"));\r\n    const emailEncoded = encodeURI(oData.get(\"email\"));\r\n    const categoryEncoded = encodeURI(oData.get(\"category\") === 'on' ? 1 : 0 );\r\n    const innEncoded = encodeURI(oData.get(\"inn\"));\r\n    const kppEncoded = encodeURI(oData.get(\"kpp\"));\r\n    //const egrulEncoded = encodeURI(oData.get(\"egrul\"));\r\n    //const ogrnEncoded = encodeURI(oData.get(\"ogrn\"));\r\n    //const oktmoEncoded = encodeURI(oData.get(\"oktmo\"));\r\n    const shortNameEncoded = encodeURI(oData.get(\"shortName\"));\r\n    const tokenEncoded = encodeURI(oData.get(\"token\"));\r\n    const userNameEncoded = encodeURI(oData.get(\"userName\"));\r\n    const userSecondNameEncoded = encodeURI(oData.get(\"userSecondName\"));\r\n    const userSurenameEncoded = encodeURI(oData.get(\"userSurname\"));\r\n    const regNameEncoded = encodeURI(oData.get(\"regNum\")); //norezident\r\n    const phoneOrgEncoded = encodeURI(oData.get(\"phoneOrg\"));\r\n    const emailOrgEncoded = encodeURI(oData.get(\"emailOrg\"));\r\n    const funcEncoded1 = encodeURI(oData.get(\"f1\") === 'on' ? 1 : 0 );\r\n    const funcEncoded2 = encodeURI(oData.get(\"f2\") === 'on' ? 1 : 0 );\r\n    const funcEncoded3 = encodeURI(oData.get(\"f3\") === 'on' ? 1 : 0 );\r\n    const funcEncoded4 = encodeURI(oData.get(\"f4\") === 'on' ? 1 : 0 );\r\n    const funcEncoded5 = encodeURI(oData.get(\"f5\") === 'on' ? 1 : 0 );\r\n    const funcEncoded6 = encodeURI(oData.get(\"f6\") === 'on' ? 1 : 0 );\r\n    const funcEncoded7 = encodeURI(oData.get(\"f7\") === 'on' ? 1 : 0 );\r\n    const funcEncoded8 = encodeURI(oData.get(\"f8\") === 'on' ? 1 : 0 );\r\n    const funcEncoded9 = encodeURI(oData.get(\"f9\") === 'on' ? 1 : 0 );\r\n\r\n    //const messageEncoded = encodeURI(oData.get(\"message\"));\r\n    //const adressEncoded = encodeURI(oData.get(\"adress\"));\r\n    //const adressEngEncoded = encodeURI(oData.get(\"adressEng\"));\r\n    //const nameEngEncoded = encodeURI(oData.get(\"nameEng\"));\r\n\r\n    oData.append(\"fullNameEncoded\", fullNameEncoded);\r\n    oData.append(\"emailEncoded\", emailEncoded);\r\n    oData.append(\"categoryEncoded\", categoryEncoded);\r\n    //oData.append(\"egrulEncoded\", egrulEncoded);\r\n    oData.append(\"innEncoded\", innEncoded);\r\n    oData.append(\"kppEncoded\", kppEncoded);\r\n    //oData.append(\"ogrnEncoded\", ogrnEncoded);\r\n    //oData.append(\"oktmoEncoded\", oktmoEncoded);\r\n    oData.append(\"shortNameEncoded\", shortNameEncoded);\r\n    oData.append(\"tokenEncoded\", tokenEncoded);\r\n    oData.append(\"userNameEncoded\", userNameEncoded);\r\n    oData.append(\"userSecondNameEncoded\", userSecondNameEncoded);\r\n    oData.append(\"userSurenameEncoded\", userSurenameEncoded);\r\n    oData.append(\"regNameEncoded\", regNameEncoded);\r\n    oData.append(\"phoneOrgEncoded\", phoneOrgEncoded);\r\n    oData.append(\"emailOrgEncoded\", emailOrgEncoded);\r\n    oData.append(\"functionEncodedF1\", funcEncoded1);\r\n    oData.append(\"functionEncodedF2\", funcEncoded2);\r\n    oData.append(\"functionEncodedF3\", funcEncoded3);\r\n    oData.append(\"functionEncodedF4\", funcEncoded4);\r\n    oData.append(\"functionEncodedF5\", funcEncoded5);\r\n    oData.append(\"functionEncodedF6\", funcEncoded6);\r\n    oData.append(\"functionEncodedF7\", funcEncoded7);\r\n    oData.append(\"functionEncodedF8\", funcEncoded8);\r\n    oData.append(\"functionEncodedF9\", funcEncoded9);\r\n    \r\n    \r\n    //oData.append(\"messageEncoded\", messageEncoded);\r\n    //oData.append(\"adressEncoded\", adressEncoded);\r\n    //oData.append(\"adressEngEncoded\", adressEngEncoded);\r\n    //oData.append(\"nameEngEncoded\", nameEngEncoded);\r\n\r\n    xhr.open(\"POST\", url, true);\r\n    xhr.upload.addEventListener(\"progress\", onUpdateProgress, false);\r\n\r\n    xhr.send(oData);\r\n    xhr.onreadystatechange = () => {\r\n      console.log(xhr.status);\r\n      if (xhr.readyState !== 4) {\r\n        return false;\r\n      }\r\n\r\n      if (xhr.status !== 200) {\r\n        onError(xhr.status);\r\n      } else {\r\n        onResponse(JSON.parse(xhr.responseText));\r\n      }\r\n    };\r\n  }\r\n\r\n  asyncSubmitVerifyToken(sToken, url, onResponse, onError) {\r\n    const xhr = this.createXHR();\r\n    \r\n    //let oData = JSON.stringify({\"token\": sToken});\r\n    // xhr.open(\"POST\", url, true);\r\n    // xhr.setRequestHeader('Content-type', 'application/json; charset=utf-8');\r\n    // xhr.send(oData);\r\n\r\n    var body = 'token=' + encodeURIComponent(sToken);\r\n    xhr.open(\"POST\", url, true);\r\n    xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\r\n    xhr.send(body);\r\n\r\n    xhr.onreadystatechange = () => {\r\n      console.log(xhr.status);\r\n      if (xhr.readyState !== 4) {\r\n        return false;\r\n      }\r\n\r\n      if (xhr.status !== 200) {\r\n        onError(xhr.status);\r\n      } else {\r\n        //onResponse(xhr.responseText);\r\n        onResponse(JSON.parse(xhr.responseText));\r\n      }\r\n    };\r\n  }\r\n\r\n\r\n  createXHR() {\r\n    let xmlhttp = false;\r\n    for (let i = 0; i < this.XMLHttpFactories.length; i++) {\r\n      try {\r\n        xmlhttp = this.XMLHttpFactories[i]();\r\n      } catch (e) {\r\n        continue;\r\n      }\r\n      break;\r\n    }\r\n    return xmlhttp;\r\n  }\r\n}\r\nexport default Backend;\r\n","import { Component } from \"react\";\r\n\r\nclass InputComponent extends Component {\r\n  setInvalid(inputField) {\r\n    this.changeClass(inputField, \"is-valid\", \"is-invalid\");\r\n  }\r\n\r\n  setValid(inputField) {\r\n    this.changeClass(inputField, \"is-invalid\", \"is-valid\");\r\n  }\r\n\r\n  changeClass(element, oldClass, newClass) {\r\n    try {\r\n      element.classList.remove(oldClass);\r\n      element.classList.add(newClass);\r\n    } catch (e) {\r\n      console.log(\"Exception [changeClass]\", e);\r\n    }\r\n  }\r\n}\r\n\r\nexport default InputComponent;\r\n","import React from \"react\";\r\nimport InputComponent from \"./inputcomponent\";\r\n\r\nclass InputEmail extends InputComponent {\r\n  handleChange = e => {\r\n    // fire the form change event\r\n    this.props.onChange(e);\r\n    this.validateValue(e.target);\r\n  };\r\n\r\n  validateValue(input) {\r\n    const re = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n    const email = input.value;\r\n    let result = false;\r\n\r\n    if (re.test(String(email).toLowerCase())) {\r\n      result = true;\r\n      this.setValid(input);\r\n    } else {\r\n      this.setInvalid(input);\r\n    }\r\n    console.log(\"validateEmail:\" + result);\r\n    this.props.onValidate(result);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"mb-3\">\r\n        {/* <label htmlFor=\"email\">{this.props.label}</label> */}\r\n        <div className=\"input-group\">\r\n          <div className=\"input-group-prepend\">\r\n            <span className=\"input-group-text\">@</span>\r\n          </div>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"email\"\r\n            name=\"email\"\r\n            placeholder={this.props.placeholder}\r\n            onChange={this.handleChange}\r\n            value={this.props.value}\r\n            required\r\n          />\r\n          <div className=\"invalid-feedback\" stylename=\"width: 100%\">\r\n            {this.props.invalidMessage}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InputEmail;\r\n","import React, { Component } from \"react\";\r\nimport { Button } from \"reactstrap\";\r\n\r\nclass InputSendBtn extends Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Button color=\"primary\" size=\"lg\" block>\r\n          {this.props.caption}\r\n        </Button>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InputSendBtn;\r\n","import React from \"react\";\r\nimport InputComponent from \"./inputcomponent\";\r\n\r\nclass InputFullname extends InputComponent {\r\n  handleChange = e => {\r\n    // fire the form change event\r\n    this.props.onChange(e);\r\n    this.validateValue(e.target);\r\n  };\r\n\r\n  validateValue(input) {\r\n    let result = false;\r\n    const minLen = this.props.minLen;\r\n    const value = input.value;\r\n\r\n    if (value && value.length >= minLen) {\r\n      result = true;\r\n      this.setValid(input);\r\n    } else {\r\n      this.setInvalid(input);\r\n    }\r\n    this.props.onValidate(result);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={this.props.shouldHide ? 'mb-3 hidden' : 'mb-3'} >\r\n        {/* <label htmlFor=\"fullName\">{this.props.label}</label> */}\r\n        <div className=\"floating-label-group\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"fullName\"\r\n            name=\"fullName\"\r\n            required\r\n            onChange={this.handleChange}\r\n            value={this.props.value}\r\n          />\r\n          <span className=\"floating-label\">{this.props.label}</span>\r\n          <div className=\"invalid-feedback\" stylename=\"width: 100%\">\r\n            {this.props.invalidMessage}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InputFullname;\r\n","import React from \"react\";\r\nimport InputComponent from \"./inputcomponent\";\r\n\r\nclass InputShortname extends InputComponent {\r\n  handleChange = e => {\r\n    // fire the form change event\r\n    this.props.onChange(e);\r\n    this.validateValue(e.target);\r\n  };\r\n\r\n  validateValue(input) {\r\n    let result = false;\r\n    const minLen = this.props.minLen;\r\n    const value = input.value;\r\n\r\n    if (value && value.length >= minLen) {\r\n      result = true;\r\n      this.setValid(input);\r\n    } else {\r\n      this.setInvalid(input);\r\n    }\r\n    this.props.onValidate(result);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={this.props.shouldHide ? 'mb-3 hidden' : 'mb-3'} >\r\n        {/* <label htmlFor=\"shortName\">{this.props.label}</label> */}\r\n        <div className=\"floating-label-group\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"shortName\"\r\n            name=\"shortName\"\r\n            required\r\n            onChange={this.handleChange}\r\n            value={this.props.value}\r\n          />\r\n          <span className=\"floating-label\">{this.props.label}</span>\r\n          <div className=\"invalid-feedback\" stylename=\"width: 100%\">\r\n            {this.props.invalidMessage}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InputShortname;\r\n","import React from \"react\";\r\nimport InputComponent from \"./inputcomponent\";\r\n\r\nclass InputKpp extends InputComponent {\r\n  handleChange = e => {\r\n    // fire the form change event\r\n    this.props.onChange(e);\r\n    this.validateValue(e.target);\r\n  };\r\n\r\n  validateValue(input) {\r\n    let result = false;\r\n    const minLen = this.props.minLen;\r\n    const value = input.value;\r\n\r\n    if (value && value.length >= minLen) {\r\n      result = true;\r\n      this.setValid(input);\r\n    } else {\r\n      this.setInvalid(input);\r\n    }\r\n    this.props.onValidate(result);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={this.props.shouldHide ? 'mb-3 hidden' : 'mb-3'} >\r\n        {/* <label htmlFor=\"kpp\">{this.props.label}</label> */}\r\n        <div className=\"floating-label-group\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"kpp\"\r\n            name=\"kpp\"\r\n            required\r\n            onChange={this.handleChange}\r\n            value={this.props.value}\r\n            maxLength={this.props.maxLen}\r\n          />\r\n          <span className=\"floating-label\">{this.props.label}</span>\r\n          <div className=\"invalid-feedback\" stylename=\"width: 100%\">\r\n            {this.props.invalidMessage}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InputKpp;\r\n","import React from \"react\";\r\nimport InputComponent from \"./inputcomponent\";\r\n\r\nclass InputInn extends InputComponent {\r\n  handleChange = e => {\r\n    // fire the form change event\r\n    this.props.onChange(e);\r\n    this.validateValue(e.target);\r\n  };\r\n\r\n  validateValue(input) {\r\n    let result = false;\r\n    const minLen = this.props.minLen;\r\n    const value = input.value;\r\n\r\n    if (value && value.length >= minLen) {\r\n      result = true;\r\n      this.setValid(input);\r\n    } else {\r\n      this.setInvalid(input);\r\n    }\r\n    this.props.onValidate(result);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={this.props.shouldHide ? 'mb-3 hidden' : 'mb-3'} >\r\n        {/* <label htmlFor=\"inn\">{this.props.label}</label> */}\r\n        <div className=\"floating-label-group\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"inn\"\r\n            name=\"inn\"\r\n            required\r\n            onChange={this.handleChange}\r\n            value={this.props.value}\r\n            maxLength={this.props.maxLen}\r\n          />\r\n          <span className=\"floating-label\">{this.props.label}</span>\r\n          <div className=\"invalid-feedback\" stylename=\"width: 100%\">\r\n            {this.props.invalidMessage}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InputInn;\r\n","import React from \"react\";\r\nimport InputComponent from \"./inputcomponent\";\r\n//import { UncontrolledPopover, PopoverHeader, PopoverBody } from 'reactstrap';\r\n\r\nclass InputTokenRegCheckbox extends InputComponent {\r\n  handleChange = e => {\r\n    // fire the form change event\r\n    this.props.onChange(e);\r\n    //this.validateValue();\r\n  };\r\n\r\n  // validateValue = () => {\r\n  //   this.props.onValidate(true);\r\n  // };\r\n\r\n  handleModalToggle = () => {\r\n    this.props.handleModal(this.props.modalTitle,this.props.modalText);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"d-block my-3\">\r\n            <div className=\"custom-control custom-switch\">\r\n              <input\r\n                id=\"tokenReg\"\r\n                name=\"tokenReg\"\r\n                type=\"checkbox\"\r\n                checked={this.props.value}\r\n                className=\"form-control custom-control-input\"\r\n                onChange={this.handleChange}\r\n              />\r\n\r\n              <label className=\"custom-control-label\" htmlFor=\"tokenReg\">\r\n                {this.props.label}\r\n              </label>\r\n\r\n              {\". \"}\r\n              <a href=\"javascript:void(null);\" onClick={this.handleModalToggle}>{this.props.aboutLink}</a>\r\n    \r\n            </div>\r\n          \r\n          {/* <div className=\"text-muted\">\r\n            {this.props.infoMessage}\r\n          </div> */}\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InputTokenRegCheckbox;\r\n","import React from \"react\";\r\nimport InputComponent from \"./inputcomponent\";\r\n\r\nclass InputToken extends InputComponent {\r\n  handleChange = e => {\r\n    // fire the form change event\r\n    this.props.onChange(e);\r\n    this.validateValue(e.target);\r\n  };\r\n\r\n  validateValue(input) {\r\n    let result = false;\r\n    const minLen = this.props.minLen;\r\n    const value = input.value;\r\n\r\n    if (value && value.length >= minLen) {\r\n      result = true;\r\n      this.setValid(input);\r\n    } else {\r\n      this.setInvalid(input);\r\n    }\r\n    this.props.onValidate(result);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={this.props.shouldHide ? 'mb-3 hidden' : 'mb-3'} >\r\n        {/* <label htmlFor=\"egrul\">{this.props.label}</label> */}\r\n        <div className=\"floating-label-group\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"token\"\r\n            name=\"token\"\r\n            onChange={this.handleChange}\r\n            value={this.props.value}\r\n            required={this.props.required} \r\n          />\r\n          {/* required */}\r\n          <span className=\"floating-label\">{this.props.label}</span>\r\n          <div className=\"invalid-feedback\" stylename=\"width: 100%\">\r\n            {this.props.invalidMessage}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InputToken;\r\n","import React from \"react\";\r\nimport InputComponent from \"./inputcomponent\";\r\n\r\nclass InputEmailOrg extends InputComponent {\r\n  handleChange = e => {\r\n    // fire the form change event\r\n    this.props.onChange(e);\r\n    this.validateValue(e.target);\r\n  };\r\n\r\n  validateValue(input) {\r\n    const re = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n    const email = input.value;\r\n    let result = false;\r\n\r\n    if (re.test(String(email).toLowerCase())) {\r\n      result = true;\r\n      this.setValid(input);\r\n    } else {\r\n      this.setInvalid(input);\r\n    }\r\n    console.log(\"validateEmailOrg:\" + result);\r\n    this.props.onValidate(result);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"mb-3\">\r\n        {/* <label htmlFor=\"emailOrg\">{this.props.label}</label> */}\r\n        <div className=\"input-group\">\r\n          <div className=\"input-group-prepend\">\r\n            <span className=\"input-group-text\">@</span>\r\n          </div>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"emailOrg\"\r\n            name=\"emailOrg\"\r\n            placeholder={this.props.placeholder}\r\n            onChange={this.handleChange}\r\n            value={this.props.value}\r\n            required\r\n          />\r\n          <div className=\"invalid-feedback\" stylename=\"width: 100%\">\r\n            {this.props.invalidMessage}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InputEmailOrg;\r\n","import React from \"react\";\r\nimport InputComponent from \"./inputcomponent\";\r\n\r\nclass InputPhoneOrg extends InputComponent {\r\n  handleChange = e => {\r\n    // fire the form change event\r\n    this.props.onChange(e);\r\n    this.validateValue(e.target);\r\n  };\r\n\r\n  validateValue(input) {\r\n    let result = false;\r\n    const minLen = this.props.minLen;\r\n    const value = input.value;\r\n\r\n    if (value && value.length >= minLen) {\r\n      result = true;\r\n      this.setValid(input);\r\n    } else {\r\n      this.setInvalid(input);\r\n    }\r\n    this.props.onValidate(result);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={this.props.shouldHide ? 'mb-3 hidden' : 'mb-3'} >\r\n        {/* <label htmlFor=\"phoneOrg\">{this.props.label}</label> */}\r\n        <div className=\"floating-label-group\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"phoneOrg\"\r\n            name=\"phoneOrg\"\r\n            required\r\n            onChange={this.handleChange}\r\n            value={this.props.value}\r\n          />\r\n\r\n          <span className=\"floating-label\">{this.props.label}</span>\r\n          <div className=\"invalid-feedback\" stylename=\"width: 100%\">\r\n            {this.props.invalidMessage}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InputPhoneOrg;\r\n","import React from \"react\";\r\nimport InputComponent from \"./inputcomponent\";\r\n\r\nclass InputRegNum extends InputComponent {\r\n  handleChange = e => {\r\n    // fire the form change event\r\n    this.props.onChange(e);\r\n    this.validateValue(e.target);\r\n  };\r\n\r\n  validateValue(input) {\r\n    let result = false;\r\n    const minLen = this.props.minLen;\r\n    const value = input.value;\r\n\r\n    if (value && value.length >= minLen) {\r\n      result = true;\r\n      this.setValid(input);\r\n    } else {\r\n      this.setInvalid(input);\r\n    }\r\n    this.props.onValidate(result);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={this.props.shouldHide ? 'mb-3 hidden' : 'mb-3'} >\r\n        {/* <label htmlFor=\"regNum\">{this.props.label}</label> */}\r\n        <div className=\"floating-label-group\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"regNum\"\r\n            name=\"regNum\"\r\n            required\r\n            onChange={this.handleChange}\r\n            value={this.props.value}\r\n            maxLength={this.props.maxLen}\r\n          />\r\n          <span className=\"floating-label\">{this.props.label}</span>\r\n          <div className=\"invalid-feedback\" stylename=\"width: 100%\">\r\n            {this.props.invalidMessage}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InputRegNum;\r\n","import React from \"react\";\r\nimport InputComponent from \"./inputcomponent\";\r\n\r\nclass InputUserName extends InputComponent {\r\n  handleChange = e => {\r\n    // fire the form change event\r\n    this.props.onChange(e);\r\n    this.validateValue(e.target);\r\n  };\r\n\r\n  validateValue(input) {\r\n    let result = false;\r\n    const minLen = this.props.minLen;\r\n    const value = input.value;\r\n\r\n    if (value && value.length >= minLen) {\r\n      result = true;\r\n      this.setValid(input);\r\n    } else {\r\n      this.setInvalid(input);\r\n    }\r\n    this.props.onValidate(result);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={this.props.shouldHide ? 'mb-3 hidden' : 'mb-3'} >\r\n        {/* <label htmlFor=\"userName\">{this.props.label}</label> */}\r\n        <div className=\"floating-label-group\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"userName\"\r\n            name=\"userName\"\r\n            onChange={this.handleChange}\r\n            value={this.props.value}\r\n            maxLength={this.props.maxLen}\r\n            required\r\n          />\r\n          <span className=\"floating-label\">{this.props.label}</span>\r\n          <div className=\"invalid-feedback\" stylename=\"width: 100%\">\r\n            {this.props.invalidMessage}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InputUserName;\r\n","import React from \"react\";\r\nimport InputComponent from \"./inputcomponent\";\r\n\r\nclass InputUserSecondName extends InputComponent {\r\n  handleChange = e => {\r\n    // fire the form change event\r\n    this.props.onChange(e);\r\n    this.validateValue(e.target);\r\n  };\r\n\r\n  validateValue(input) {\r\n    let result = false;\r\n    const minLen = this.props.minLen;\r\n    const value = input.value;\r\n\r\n    if (value && value.length >= minLen) {\r\n      result = true;\r\n      this.setValid(input);\r\n    } else {\r\n      this.setInvalid(input);\r\n    }\r\n    this.props.onValidate(result);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={this.props.shouldHide ? 'mb-3 hidden' : 'mb-3'} >\r\n        {/* <label htmlFor=\"userSecondName\">{this.props.label}</label> */}\r\n        <div className=\"floating-label-group\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"userSecondName\"\r\n            name=\"userSecondName\"\r\n            onChange={this.handleChange}\r\n            value={this.props.value}\r\n            required\r\n          />\r\n          <span className=\"floating-label\">{this.props.label}</span>\r\n          <div className=\"invalid-feedback\" stylename=\"width: 100%\">\r\n            {this.props.invalidMessage}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InputUserSecondName;\r\n","import React from \"react\";\r\nimport InputComponent from \"./inputcomponent\";\r\n\r\nclass InputUserSurname extends InputComponent {\r\n  handleChange = e => {\r\n    // fire the form change event\r\n    this.props.onChange(e);\r\n    this.validateValue(e.target);\r\n  };\r\n\r\n  validateValue(input) {\r\n    let result = false;\r\n    const minLen = this.props.minLen;\r\n    const value = input.value;\r\n\r\n    if (value && value.length >= minLen) {\r\n      result = true;\r\n      this.setValid(input);\r\n    } else {\r\n      this.setInvalid(input);\r\n    }\r\n    this.props.onValidate(result);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={this.props.shouldHide ? 'mb-3 hidden' : 'mb-3'} >\r\n        {/* <label htmlFor=\"userSurname\">{this.props.label}</label> */}\r\n        <div className=\"floating-label-group\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"userSurname\"\r\n            name=\"userSurname\"\r\n            onChange={this.handleChange}\r\n            value={this.props.value}\r\n            required\r\n          />\r\n          \r\n          <span className=\"floating-label\">{this.props.label}</span>\r\n          <div className=\"invalid-feedback\" stylename=\"width: 100%\">\r\n            {this.props.invalidMessage}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InputUserSurname;\r\n","import React from \"react\";\r\nimport InputComponent from \"./inputcomponent\";\r\n\r\nclass InputCategory extends InputComponent {\r\n  handleChange = e => {\r\n    // fire the form change event\r\n    this.props.onChange(e);\r\n    //this.validateValue();\r\n  };\r\n\r\n  // validateValue = () => {\r\n  //   this.props.onValidate(true);\r\n  // };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"d-block my-3\">\r\n          <div className=\"custom-control custom-switch\">\r\n            <input\r\n              id=\"category\"\r\n              name=\"category\"\r\n              type=\"checkbox\"\r\n              checked={this.props.value}\r\n              className=\"form-control custom-control-input\"\r\n              onChange={this.handleChange}\r\n            />\r\n            <label className=\"custom-control-label\" htmlFor=\"category\">\r\n              {this.props.label}\r\n            </label>\r\n          </div>\r\n          {/* <div className=\"text-muted\">\r\n            {this.props.infoMessage}\r\n          </div> */}\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InputCategory;\r\n","import React from \"react\";\r\nimport InputComponent from \"./inputcomponent\";\r\n\r\nclass InputIP extends InputComponent {\r\n  handleChange = e => {\r\n    // fire the form change event\r\n    this.props.onChange(e);\r\n    //this.validateValue();\r\n  };\r\n\r\n  // validateValue = () => {\r\n  //   this.props.onValidate(true);\r\n  // };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"d-block my-3\">\r\n          <div className=\"custom-control custom-switch\">\r\n            <input\r\n              id=\"ip\"\r\n              name=\"ip\"\r\n              type=\"checkbox\"\r\n              checked={this.props.value}\r\n              className=\"form-control custom-control-input\"\r\n              onChange={this.handleChange}\r\n            />\r\n            <label className=\"custom-control-label\" htmlFor=\"ip\">\r\n              {this.props.label}\r\n            </label>\r\n          </div>\r\n          {/* <div className=\"text-muted\">\r\n            {this.props.infoMessage}\r\n          </div> */}\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InputIP;\r\n","import React from \"react\";\r\nimport InputComponent from \"./inputcomponent\";\r\n\r\nclass Inputcheckpersdata extends InputComponent {\r\n\r\n  handleChange = e => {\r\n    // fire the form change event\r\n    this.props.onChange(e);\r\n    this.validateValue(e.target);\r\n  };\r\n\r\n  validateValue = input => {\r\n    const checked = input.checked;\r\n    if (checked) {\r\n      this.props.onValidate(true);\r\n    } else {\r\n      this.props.onValidate(false);\r\n    }\r\n  };\r\n\r\n  handleModalToggle = () => {\r\n    this.props.handleModal(this.props.modalTitle, this.props.modalText);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"d-block my-3\">\r\n          {this.props.items.map(item => (\r\n            <div key={item.id} className=\"custom-control custom-switch\">\r\n              {/* checked={item.checked} */}\r\n              <input\r\n                id={item.id}\r\n                key={item.id}\r\n                value={item.id}\r\n                name=\"checkpersdata\"\r\n                type=\"checkbox\"\r\n                checked={this.props.value}\r\n                className=\"form-control custom-control-input\"\r\n                onChange={this.handleChange}\r\n                required\r\n              />\r\n\r\n              <label className=\"custom-control-label\" htmlFor={item.id}>\r\n                {item.text}\r\n              </label>\r\n              {\". \"}\r\n              {/* <a href=\"javascript:void(null);\" onClick={this.handleModalToggle}>{this.props.aboutLink}</a> */}\r\n              <a href=\"https://www.gazprom-neft.ru/terms/\" target=\"_blank\">{this.props.aboutLink}</a>\r\n              {this.props.items.length - 1 === Number.parseInt(item.id) && (\r\n                <div className=\"invalid-feedback\" stylename=\"width: 100%\">\r\n                  {this.props.invalidMessage}\r\n                </div>\r\n              )}\r\n            </div>\r\n          ))}\r\n          {/* <div className=\"text-muted\">\r\n            {this.props.infoMessage}\r\n          </div> */}\r\n        </div>\r\n\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Inputcheckpersdata;\r\n","import React from \"react\";\r\nimport InputComponent from \"./inputcomponent\";\r\nimport Backend from \"./backend\";\r\n\r\nclass InputCaptcha extends InputComponent {\r\n  state = {};\r\n  backend = new Backend();\r\n\r\n  handleChange = e => {\r\n    // fire the form change event\r\n    this.props.onChange(e);\r\n    this.validateValue(e.target);\r\n  };\r\n\r\n  validateValue(inputField) {\r\n    const xhr = this.backend.createXHR();\r\n\r\n    xhr.open(\r\n      \"GET\",\r\n      \"/NDI_EPCOMMON_D~gzpn~regform~service~rs~gazprom-neft.ru/rs/regform/checkcaptcha/\" +\r\n        inputField.value,\r\n      true\r\n    );\r\n\r\n    xhr.send();\r\n    xhr.onreadystatechange = () => {\r\n      let result = false;\r\n      console.log(xhr.status);\r\n      if (xhr.readyState !== 4) {\r\n        return false;\r\n      }\r\n      if (xhr.status !== 200) {\r\n        this.setInvalid(inputField);\r\n      } else {\r\n        const oResult = JSON.parse(xhr.responseText);\r\n        console.log(oResult);\r\n        console.log(\"oResult.captchaPassed\", oResult.response.captchaPassed);\r\n        if (oResult.response.captchaPassed === true) {\r\n          this.setValid(inputField);\r\n          result = true;\r\n        } else {\r\n          this.setInvalid(inputField);\r\n        }\r\n      }\r\n\r\n      this.props.onValidate(result);\r\n    };\r\n  }\r\n\r\n  handleImageClick(event) {\r\n    let index = event.target.src.indexOf(\"?t=\");\r\n    let url = event.target.src;\r\n    if (index > -1) {\r\n      url = url.slice(0, index);\r\n    }\r\n\r\n    event.target.src = \"\";\r\n    event.target.src = url + \"?t=\" + new Date().getTime();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        {/* <hr className=\"mt-4\" /> */}\r\n\r\n        <div className=\"mb-3\">\r\n          <div className=\"input-group\">\r\n            <div className=\"input-group-prepend\">\r\n              <img\r\n                id=\"captchaid\"\r\n                alt=\"\"\r\n                src={this.props.src}\r\n                className=\"gzpn-captcha-img\"\r\n                onClick={this.handleImageClick}\r\n              />\r\n              {/* src=\"/NDI_EPCOMMON_D~gzpn~regform~service~rs~gazprom-neft.ru/rs/regform/captcha\" */}\r\n            </div>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"checkCode\"\r\n              name=\"checkCode\"\r\n              placeholder={this.props.placeholder}\r\n              required\r\n              value={this.props.value}\r\n              onChange={this.handleChange}\r\n            />\r\n            <div className=\"invalid-feedback\" stylename=\"width: 100%\">\r\n              {this.props.invalidMessage}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-3 mb-3\" />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InputCaptcha;\r\n","import React, { Component } from \"react\";\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from \"reactstrap\";\r\n\r\nclass MessageWindow extends Component {\r\n  state = {\r\n    //modal: this.props.modal,\r\n    backdrop: true,\r\n    size: \"lg\"\r\n  };\r\n\r\n  // toggle = () => this.setState({\r\n  //   modal: !this.props.modal\r\n  // });\r\n\r\n  handleModalToggle = () => {\r\n    this.props.handleModal();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {/* <a href=\"#\" onClick={this.toggle}>подробнее</a> */}\r\n        <Modal\r\n          //isOpen={this.state.modal}\r\n          isOpen={this.props.modal}\r\n          toggle={this.handleModalToggle}\r\n          className={this.props.className}\r\n          backdrop={this.state.backdrop}\r\n          size={this.state.size}\r\n        >\r\n          <ModalHeader toggle={this.handleModalToggle}>{this.props.title}</ModalHeader>\r\n          <ModalBody>\r\n            {/* {this.props.textPD} */}\r\n            <div dangerouslySetInnerHTML={{ __html: this.props.text }} />\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button color=\"secondary\" onClick={this.handleModalToggle}>\r\n              Закрыть\r\n          </Button>\r\n          </ModalFooter>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MessageWindow;\r\n","import React, { Component } from \"react\";\r\n\r\nimport { Form, Col, Row, Card, CardBody } from \"reactstrap\";\r\nimport InputEmail from \"./_inputemail\";\r\nimport InputSendBtn from \"./inputsendbtn\";\r\nimport InputFullname from \"./_inputfullname\";\r\nimport InputShortname from \"./_inputshortname\";\r\nimport InputKpp from \"./_inputkpp\";\r\nimport InputInn from \"./_inputinn\";\r\n//import InputOgrn from \"./_inputogrn\";\r\n//import InputOktmo from \"./_inputoktmo\";\r\n//import InputEgrul from \"./_inputegrul\";\r\nimport InputTokenRegCheckbox from \"./_inputtokenreg\";\r\nimport InputCheckList from \"./_inputchecklist\";\r\nimport InputToken from \"./_inputtoken\";\r\nimport InputEmailOrg from \"./_inputemailorg\";\r\nimport InputPhoneOrg from \"./_inputphoneorg\";\r\nimport InputRegNum from \"./_inputregnum\";\r\nimport InputUserName from \"./_inputusername\";\r\nimport InputSecondName from \"./_inputusersecondname\";\r\nimport InputUserSurname from \"./_inputusershurname\";\r\nimport InputCategory from \"./_inputcategory\";\r\nimport InputIP from \"./_inputip\";\r\nimport Inputcheckpersdata from \"./_inputcheckpersdata\";\r\nimport InputCaptcha from \"./inputcaptcha\";\r\nimport MessageWindow from \"./messagewindow\";\r\n//import TextareaMessage from \"./textareamessage\";\r\n//import AttachmentList from \"./attachments\";\r\n\r\nclass RegForm extends Component {\r\n  form = React.createRef();\r\n  //attachList = React.createRef();\r\n\r\n  state = {\r\n    category: false,\r\n    ip: false,\r\n    tokenReg: false,\r\n    modal: false,\r\n    token: \"\",\r\n    checkedItems: new Map(),\r\n    //user\r\n    email: \"\",\r\n    userName: \"\",\r\n    userSecondName: \"\",\r\n    userSurname: \"\",\r\n    checkpersdata: \"\",\r\n    //org\r\n    fullName: \"\",\r\n    shortName: \"\",\r\n    kpp: \"\",\r\n    inn: \"\",\r\n    innMaxLen: 10,\r\n    //ogrn: \"\",\r\n    //oktmo: \"\",\r\n    emailOrg: \"\",\r\n    phoneOrg: \"\",\r\n    regNum: \"\",\r\n    //engName: \"\",\r\n    //adress: \"\",\r\n    //adressEng: \"\",\r\n    // data\r\n    checkCode: \"\",\r\n    captchaUrl: \"/NDI_EPCOMMON_D~gzpn~regform~service~rs~gazprom-neft.ru/rs/regform/captcha\",\r\n    //message: \"\",\r\n\r\n    validate: {\r\n      userName: false,\r\n      userSecondName: false,\r\n      userSurname: false,\r\n      email: false,\r\n      fullname: false,\r\n      shortName: false,\r\n      kpp: false,\r\n      inn: false,\r\n      //ogrn: false,\r\n      //oktmo: false,\r\n      //engName: false,\r\n      //adress: false,\r\n      //adressEng: false\r\n      regNum: false,\r\n      phoneOrg: false,\r\n      emailOrg: false,\r\n\r\n      token: false,\r\n      checkpersdata: false,\r\n      checkCode: true   //false чтоб вкл капчку\r\n      //message: false,\r\n    }\r\n  };\r\n\r\n  // handle input states\r\n  handleChanges = e => {\r\n    const target = e.target;\r\n    const name = target.name;\r\n    //const value = target.type === 'checkbox' ? target.checked : target.value;\r\n    if (target.title === 'function') {\r\n      const item = target.name;\r\n      const isChecked = target.checked;\r\n      this.setState(prevState => ({ checkedItems: prevState.checkedItems.set(item, isChecked) }));\r\n    } else {\r\n      const value = target.type === 'checkbox' ? target.checked : target.value;\r\n      // inn lenght\r\n      if (target.name === 'ip') {\r\n        if (target.checked) {\r\n          this.setState({ innMaxLen: 12 });\r\n        } else {\r\n          this.setState({ innMaxLen: 10 });\r\n        }\r\n      }\r\n      this.setState({\r\n        [name]: value\r\n      });\r\n    }\r\n\r\n    // remove form's top validated style\r\n    this.form.current.classList.remove(\"was-validated\");\r\n  };\r\n\r\n  //modal show-hide\r\n  handleModal = (title, text) => {\r\n    this.setState({\r\n      modal: !this.state.modal,\r\n      title: title,\r\n      text: text\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    // const isValid =\r\n    //   !Object.values(this.state.validate).includes(false) &&\r\n    //   this.attachList.current.isValid();\r\n    console.log(\"handleSubmit validate \", this.state);\r\n\r\n    let isValid;\r\n    // let UserValid = [\"userName\", \"userSecondName\", \"userSurname\", \"email\", \"checkpersdata\"];\r\n    // let RezValid = [\"fullname\", \"shortName\", \"kpp\", \"inn\",\"ogrn\",\"oktmo\",\"phoneOrg\",\"emailOrg\"];\r\n    // let NoRezValid = [\"fullname\", \"shortName\", \"regNum\", \"phoneOrg\",\"emailOrg\"];\r\n\r\n    if (\r\n      this.state.validate.userName &&\r\n      this.state.validate.userSecondName &&\r\n      this.state.validate.userSurname &&\r\n      this.state.validate.email &&\r\n      this.state.validate.checkpersdata &&\r\n      this.state.validate.checkCode\r\n    ) {\r\n      if (this.state.tokenReg) {\r\n        if (this.state.validate.token) {\r\n          isValid = true\r\n        } else {\r\n          isValid = false\r\n        }\r\n      } else {\r\n        // check rezident or Noresident fields\r\n        if (this.state.category) {\r\n          if (\r\n            this.state.validate.fullname &&\r\n            this.state.validate.shortName &&\r\n            this.state.validate.regNum &&\r\n            this.state.validate.phoneOrg &&\r\n            this.state.validate.emailOrg\r\n          ) {\r\n            isValid = true\r\n          } else {\r\n            isValid = false\r\n          }\r\n        } else {\r\n          if (\r\n            this.state.validate.fullname &&\r\n            this.state.validate.shortName &&\r\n            (this.state.ip || this.state.validate.kpp) &&\r\n            this.state.validate.inn &&\r\n            //this.state.validate.ogrn &&\r\n            //this.state.validate.oktmo &&\r\n            this.state.validate.phoneOrg &&\r\n            this.state.validate.emailOrg\r\n          ) {\r\n            isValid = true\r\n          } else {\r\n            isValid = false\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      isValid = false\r\n    }\r\n\r\n    // submit\r\n    if (isValid) {\r\n      this.props.onSubmit(e.target);\r\n      // captha disable\r\n      //this.setState({checkCode: \"\"});\r\n      //this.handleValidate (\"checkCode\", false);\r\n      this.setState({\r\n        captchaUrl: this.state.captchaUrl + \"?t=\" + new Date().getTime()\r\n      });\r\n    } else {\r\n      e.target.classList.add(\"was-validated\");\r\n    }\r\n  };\r\n\r\n  handleValidate = (param, isValid) => {\r\n    let validate = { ...this.state.validate };\r\n    validate[param] = isValid;\r\n    this.setState({ validate: validate });\r\n  };\r\n\r\n  render() {\r\n    let i18n = this.props.i18n;\r\n    let funcData = this.props.funcData;\r\n\r\n    return (\r\n      <Form noValidate onSubmit={this.handleSubmit} innerRef={this.form}>\r\n        <Row>\r\n          {/* <AttachmentList\r\n            ref={this.attachList}\r\n            caption={i18n.attachmentList.caption}\r\n            btnlabel={i18n.attachmentList.addAttachment.label}\r\n            totalLabel={i18n.attachmentList.total}\r\n            maxFiles={i18n.attachmentList.maxFiles}\r\n            maxTotalFileSizeMb={i18n.attachmentList.maxTotalFileSizeMb}\r\n            invalidTotalFileSize={\r\n              i18n.attachmentList.validation.maxTotalFileSizeMb\r\n            }\r\n            invalidFilesCount={i18n.attachmentList.validation.maxFiles}\r\n          /> */}\r\n          <Col md={{ size: 12, order: 1 }} className=\"mt-3\">\r\n\r\n            <Card body style={{ marginBottom: '1rem' }} >\r\n\r\n              <CardBody>\r\n\r\n                <h5 className=\"mb-3\">{i18n.userHeader}</h5>\r\n\r\n                <InputUserName\r\n                  value={this.state.userName}\r\n                  onValidate={isValid => this.handleValidate(\"userName\", isValid)}\r\n                  onChange={this.handleChanges}\r\n                  label={i18n.formFields.userName.label}\r\n                  placeholder={i18n.formFields.userName.placeholder}\r\n                  invalidMessage={i18n.formFields.userName.validation.emptyValue}\r\n                  minLen={i18n.formFields.userName.validation.minLen}\r\n                />\r\n\r\n                <InputSecondName\r\n                  value={this.state.userSecondName}\r\n                  onValidate={isValid => this.handleValidate(\"userSecondName\", isValid)}\r\n                  onChange={this.handleChanges}\r\n                  label={i18n.formFields.userSecondName.label}\r\n                  placeholder={i18n.formFields.userSecondName.placeholder}\r\n                  invalidMessage={i18n.formFields.userSecondName.validation.emptyValue}\r\n                  minLen={i18n.formFields.userSecondName.validation.minLen}\r\n                />\r\n\r\n                <InputUserSurname\r\n                  value={this.state.userSurname}\r\n                  onValidate={isValid => this.handleValidate(\"userSurname\", isValid)}\r\n                  onChange={this.handleChanges}\r\n                  label={i18n.formFields.userSurname.label}\r\n                  placeholder={i18n.formFields.userSurname.placeholder}\r\n                  invalidMessage={i18n.formFields.userSurname.validation.emptyValue}\r\n                  minLen={i18n.formFields.userSurname.validation.minLen}\r\n                />\r\n\r\n                <InputEmail\r\n                  value={this.state.email}\r\n                  onValidate={isValid => this.handleValidate(\"email\", isValid)}\r\n                  onChange={this.handleChanges}\r\n                  label={i18n.formFields.email.label}\r\n                  placeholder={i18n.formFields.email.placeholder}\r\n                  invalidMessage={i18n.formFields.email.validation.emptyValue}\r\n                />\r\n\r\n                <h5 className=\"mb-3 mt-5\" >{i18n.organizationHeader}</h5>\r\n\r\n                <InputCategory\r\n                  //onValidate={isValid => this.handleValidate(\"category\", isValid)}\r\n                  value={this.state.category}\r\n                  onChange={this.handleChanges}\r\n                  label={i18n.formFields.category.label}\r\n                  invalidMessage={i18n.formFields.category.validation.emptyValue}\r\n                  infoMessage={i18n.formFields.category.infoMessage}\r\n                />\r\n\r\n                <InputIP\r\n                  value={this.state.ip}\r\n                  onChange={this.handleChanges}\r\n                  label={i18n.formFields.ip.label}\r\n                  invalidMessage={i18n.formFields.ip.validation.emptyValue}\r\n                  infoMessage={i18n.formFields.ip.infoMessage}\r\n                />\r\n\r\n                <InputTokenRegCheckbox\r\n                  value={this.state.tokenReg}\r\n                  onChange={this.handleChanges}\r\n                  label={i18n.formFields.tokenReg.label}\r\n                  handleModal={this.handleModal}\r\n                  modalTitle={i18n.formFields.tokenReg.modal.title}\r\n                  modalText={i18n.formFields.tokenReg.modal.text}\r\n                  aboutLink={i18n.formFields.tokenReg.aboutLink}\r\n                />\r\n\r\n                {/* <InputCheckList\r\n                  items={funcData.items}\r\n                  checkedItems={this.state.checkedItems}\r\n                  onChange={this.handleChanges}\r\n                  label={funcData.label}\r\n                  invalidMessage={funcData.validation.emptyValue}\r\n                  infoMessage={funcData.infoMessage}\r\n                /> */}\r\n\r\n                <div id=\"if-no-token\" className={this.state.tokenReg ? 'hidden' : ''}>\r\n\r\n                  <InputFullname\r\n                    value={this.state.fullname}\r\n                    onValidate={isValid => this.handleValidate(\"fullname\", isValid)}\r\n                    onChange={this.handleChanges}\r\n                    label={i18n.formFields.fullName.label}\r\n                    placeholder={i18n.formFields.fullName.placeholder}\r\n                    invalidMessage={i18n.formFields.fullName.validation.emptyValue}\r\n                    minLen={i18n.formFields.fullName.validation.minLen}\r\n                  />\r\n\r\n                  <InputShortname\r\n                    value={this.state.shortName}\r\n                    onValidate={isValid => this.handleValidate(\"shortName\", isValid)}\r\n                    onChange={this.handleChanges}\r\n                    label={i18n.formFields.shortName.label}\r\n                    placeholder={i18n.formFields.shortName.placeholder}\r\n                    invalidMessage={i18n.formFields.shortName.validation.emptyValue}\r\n                    minLen={i18n.formFields.shortName.validation.minLen}\r\n                  />\r\n\r\n                  <div id=\"resident-info\" className={this.state.category ? 'hidden' : ''}>\r\n\r\n                    <InputInn\r\n                      value={this.state.inn}\r\n                      onValidate={isValid => this.handleValidate(\"inn\", isValid)}\r\n                      onChange={this.handleChanges}\r\n                      label={i18n.formFields.inn.label}\r\n                      placeholder={i18n.formFields.inn.placeholder}\r\n                      invalidMessage={i18n.formFields.inn.validation.emptyValue}\r\n                      minLen={i18n.formFields.inn.validation.minLen}\r\n                      maxLen={this.state.innMaxLen}\r\n                    />\r\n\r\n                    <div className={this.state.ip ? 'hidden' : ''}>\r\n                      <InputKpp\r\n                        value={this.state.kpp}\r\n                        onValidate={isValid => this.handleValidate(\"kpp\", isValid)}\r\n                        onChange={this.handleChanges}\r\n                        label={i18n.formFields.kpp.label}\r\n                        placeholder={i18n.formFields.kpp.placeholder}\r\n                        invalidMessage={i18n.formFields.kpp.validation.emptyValue}\r\n                        minLen={i18n.formFields.kpp.validation.minLen}\r\n                        maxLen={i18n.formFields.kpp.validation.maxLen}\r\n                      />\r\n                    </div>\r\n\r\n                    {/* <InputOktmo\r\n                      value={this.state.oktmo}\r\n                      onValidate={isValid => this.handleValidate(\"oktmo\", isValid)}\r\n                      onChange={this.handleChanges}\r\n                      label={i18n.formFields.oktmo.label}\r\n                      placeholder={i18n.formFields.oktmo.placeholder}\r\n                      invalidMessage={i18n.formFields.oktmo.validation.emptyValue}\r\n                      minLen={i18n.formFields.oktmo.validation.minLen}\r\n                      maxLen={i18n.formFields.oktmo.validation.maxLen}\r\n                    /> */}\r\n\r\n                    {/* <InputOgrn\r\n                      value={this.state.ogrn}\r\n                      onValidate={isValid => this.handleValidate(\"ogrn\", isValid)}\r\n                      onChange={this.handleChanges}\r\n                      label={i18n.formFields.ogrn.label}\r\n                      placeholder={i18n.formFields.ogrn.placeholder}\r\n                      invalidMessage={i18n.formFields.ogrn.validation.emptyValue}\r\n                      minLen={i18n.formFields.ogrn.validation.minLen}\r\n                      maxLen={i18n.formFields.ogrn.validation.maxLen}\r\n                    /> */}\r\n\r\n                  </div>\r\n                  {/* resident-info */}\r\n\r\n                  <div id=\"no-resident-info\" className={this.state.category ? '' : 'hidden'}>\r\n                    <InputRegNum\r\n                      value={this.state.regNum}\r\n                      onValidate={isValid => this.handleValidate(\"regNum\", isValid)}\r\n                      onChange={this.handleChanges}\r\n                      label={i18n.formFields.regNum.label}\r\n                      placeholder={i18n.formFields.regNum.placeholder}\r\n                      invalidMessage={i18n.formFields.regNum.validation.emptyValue}\r\n                      minLen={i18n.formFields.regNum.validation.minLen}\r\n                    />\r\n                  </div>\r\n\r\n                  <InputPhoneOrg\r\n                    value={this.state.phoneOrg}\r\n                    onValidate={isValid => this.handleValidate(\"phoneOrg\", isValid)}\r\n                    onChange={this.handleChanges}\r\n                    label={i18n.formFields.phoneOrg.label}\r\n                    placeholder={i18n.formFields.phoneOrg.placeholder}\r\n                    invalidMessage={i18n.formFields.phoneOrg.validation.emptyValue}\r\n                    minLen={i18n.formFields.phoneOrg.validation.minLen}\r\n                  />\r\n\r\n                  <InputEmailOrg\r\n                    value={this.state.emailOrg}\r\n                    onValidate={isValid => this.handleValidate(\"emailOrg\", isValid)}\r\n                    onChange={this.handleChanges}\r\n                    label={i18n.formFields.emailOrg.label}\r\n                    placeholder={i18n.formFields.emailOrg.placeholder}\r\n                    invalidMessage={i18n.formFields.emailOrg.validation.emptyValue}\r\n                  />\r\n\r\n                </div>\r\n                {/* if-no-token */}\r\n\r\n                <InputToken\r\n                  value={this.state.token}\r\n                  required={this.state.tokenReg}\r\n                  shouldHide={!this.state.tokenReg}\r\n                  onValidate={isValid => this.handleValidate(\"token\", isValid)}\r\n                  onChange={this.handleChanges}\r\n                  label={i18n.formFields.token.label}\r\n                  placeholder={i18n.formFields.token.placeholder}\r\n                  invalidMessage={i18n.formFields.token.validation.emptyValue}\r\n                  minLen={i18n.formFields.token.validation.minLen}\r\n                  maxLen={i18n.formFields.token.validation.maxLen}\r\n                />\r\n\r\n                {/* <TextareaMessage\r\n                  value={this.state.message}\r\n                  onChange={this.handleChanges}\r\n                  onValidate={isValid => this.handleValidate(\"message\", isValid)}\r\n                  label={i18n.formFields.message.label}\r\n                  placeholder={i18n.formFields.message.placeholder}\r\n                  invalidMessage={i18n.formFields.message.validation.emptyValue}\r\n                  minLen={i18n.formFields.message.validation.minLen}\r\n                /> */}\r\n\r\n                <hr className=\"mt-4\" />\r\n\r\n                <Inputcheckpersdata\r\n                  onValidate={isValid => this.handleValidate(\"checkpersdata\", isValid)}\r\n                  onChange={this.handleChanges}\r\n                  items={i18n.formFields.checkpersdata.items}\r\n                  label={i18n.formFields.checkpersdata.label}\r\n                  invalidMessage={i18n.formFields.checkpersdata.validation.emptyValue}\r\n                  infoMessage={i18n.formFields.checkpersdata.infoMessage}\r\n                  handleModal={this.handleModal}\r\n                  modalText={i18n.formFields.checkpersdata.textPD}\r\n                  modalTitle={i18n.formFields.checkpersdata.placeholder}\r\n                  aboutLink={i18n.formFields.checkpersdata.aboutLink}\r\n                />\r\n\r\n                <MessageWindow\r\n                  className=\"classModal\"\r\n                  modal={this.state.modal}\r\n                  handleModal={this.handleModal}\r\n                  title={this.state.title}\r\n                  text={this.state.text}\r\n                />\r\n\r\n                <InputCaptcha\r\n                  value={this.state.checkCode}\r\n                  onChange={this.handleChanges}\r\n                  onValidate={isValid => this.handleValidate(\"checkCode\", isValid)}\r\n                  placeholder={i18n.formFields.captcha.label}\r\n                  src={this.state.captchaUrl}\r\n                  invalidMessage={\r\n                    i18n.formFields.captcha.validation.emptyOrIncorrect\r\n                  }\r\n                />\r\n\r\n                <InputSendBtn caption={i18n.formFields.btnSend.caption} />\r\n\r\n              </CardBody>\r\n            </Card>\r\n\r\n            {/* <Card body>\r\n            <CardTitle>Контактные данные</CardTitle>\r\n            <CardBody>\r\n            </CardBody>\r\n            </Card> */}\r\n\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\nexport default RegForm;\r\n","import React, { Component } from \"react\";\r\n\r\nclass ProgressIndicator extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"progress\">\r\n        <div\r\n          className=\"progress-bar progress-bar-striped progress-bar-animated\"\r\n          role=\"progressbar\"\r\n          aria-valuenow={this.props.value}\r\n          aria-valuemin=\"0\"\r\n          aria-valuemax=\"100\"\r\n          style={{ width: this.props.value + \"%\" }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProgressIndicator;\r\n","import React, { Component } from \"react\";\r\nimport { Spinner, Alert, Button } from \"reactstrap\";\r\n//import FeedbackForm from \"./feedbackform\";\r\nimport RegForm from \"./_regform\";\r\nimport Backend from \"./backend\";\r\nimport ProgressIndicator from \"./progressindicator\";\r\nimport i18n_en from \"../i18n_en.json\";\r\nimport i18n_ru from \"../i18n_ru.json\";\r\nimport funcData_en from \"../funcData_en.json\";\r\nimport funcData_ru from \"../funcData_ru.json\";\r\n\r\nclass RegisterPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      headtext: props.i18n.headText,\r\n      status: undefined,\r\n      progress: undefined,\r\n      httpError: undefined,\r\n      tokenVerified: undefined,\r\n      alertText: undefined,\r\n      alertColor: undefined,\r\n      alertVisible: false,\r\n      hasError: undefined,\r\n\r\n      lang: this.props.lang,\r\n      i18n: this.props.i18n,\r\n      funcData: this.props.funcData\r\n    };\r\n\r\n    this.alertRef = React.createRef();\r\n    this.backend = new Backend();\r\n  }\r\n\r\n  scrollToMyRef = (myRef) => window.scrollTo(0, myRef.current.offsetTop)\r\n\r\n  componentDidMount() {\r\n    // link with token from email\r\n    let search = window.location.search;\r\n    //let path = window.location.pathname;\r\n    let params = new URLSearchParams(search);\r\n    let token = params.get('token');\r\n    console.log(token);\r\n\r\n    // ie\r\n    let ie = require(\"ie-version\");\r\n    if (ie.version && ie.version <= 9) {\r\n      this.setState({ status: \"oldbrowser\" });\r\n    } else if (token) {\r\n      this.verifyToken(token);\r\n      //test pages\r\n      //this.setState({ status: \"tokenFromEmailValid\" });\r\n      //this.setState({ status: \"tokenFromEmailNotValid\" });\r\n    } else {\r\n      this.setState({ status: \"RegForm\" });\r\n    }\r\n  }\r\n\r\n  handleSubmit = oForm => {\r\n    const backend = new Backend();\r\n    const url =\r\n      \"/NDI_EPCOMMON_D~gzpn~regform~service~rs~gazprom-neft.ru/rs/regform/\";\r\n    backend.asyncSubmit(\r\n      oForm,\r\n      url,\r\n      this.handleResponse,\r\n      this.handleProgress,\r\n      this.handleError\r\n    );\r\n  };\r\n\r\n  handleResponse = oResponse => {\r\n    console.log(\"handleResponse\", oResponse);\r\n\r\n    if (oResponse.response.exceptionMessage) {\r\n      this.setState({\r\n        status: \"RegForm\",\r\n        headtext: \"\",\r\n        alertText: oResponse.response.exceptionMessage,\r\n        alertColor: \"danger\",\r\n        alertVisible: true\r\n      });\r\n      this.scrollToMyRef(this.alertRef);\r\n    } else {\r\n      console.log(\"Ответ сервреа получен \", oResponse.response.requestCategory);\r\n      if (oResponse.response.hasError) {\r\n        console.log(\"Получено сообщение об ошибке с сервера \", oResponse.response.hasError);\r\n        this.setState({\r\n          status: \"RegForm\",\r\n          headtext: \"\",\r\n          alertText: oResponse.response.requestCategory,\r\n          alertColor: \"danger\",\r\n          alertVisible: true,\r\n          hasError: oResponse.response.hasError // 0 - 1\r\n        });\r\n        this.scrollToMyRef(this.alertRef);\r\n      } else {\r\n        console.log(\"Получено сообщение об успешной регистрации сервера \", oResponse.response.requestCategory);\r\n        this.setState({\r\n          status: \"success\",\r\n          headtext: oResponse.response.requestCategory,\r\n          alertText: \"\",\r\n          alertColor: \"success\",\r\n          alertVisible: false,\r\n          hasError: oResponse.response.hasError // 0 - 1\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  handleProgress = event => {\r\n    console.log(\"progressEvent\", event);\r\n    if (event.lengthComputable) {\r\n      let percentage = Math.round((event.loaded * 100) / event.total);\r\n\r\n      this.setState({\r\n        status: \"RegForm\",\r\n        progress: percentage,\r\n        httpError: \"\",\r\n        alertVisible: false\r\n        //headtext: this.props.i18n.progressIndicator.caption\r\n      });\r\n    }\r\n  };\r\n\r\n  handleError = httpError => {\r\n    this.setState({\r\n      status: \"RegForm\",\r\n      httpError: httpError,\r\n      //headtext: \"\",\r\n      alertText: this.props.i18n.errors[httpError],\r\n      alertColor: \"danger\",\r\n      alertVisible: true,\r\n      //hasError: 1\r\n    });\r\n    this.scrollToMyRef(this.alertRef);\r\n  };\r\n\r\n  oldBrowser() {\r\n    return (\r\n      <React.Fragment>\r\n        <p className=\"not-supported\">\r\n          Вам необходимо обновить Ваш браузер. Используйте последние версии\r\n          Internet Explorer и Google Chrome.\r\n        </p>\r\n        <p className=\"not-supported\">\r\n          Your need to update your Browser. Use the latest versions of IE and\r\n          Google Chrome.\r\n        </p>\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  verifyToken(sToken) {\r\n    //http://localhost:3000/?token=123\r\n    const backend = new Backend();\r\n    const url =\r\n      \"/NDI_EPCOMMON_D~gzpn~regform~service~rs~gazprom-neft.ru/rs/regform/verify\";\r\n    backend.asyncSubmitVerifyToken(\r\n      sToken,\r\n      url,\r\n      this.handleResponseTokenVerify,\r\n      this.handleError\r\n    );\r\n\r\n  };\r\n\r\n  handleResponseTokenVerify = oResponse => {\r\n    console.log(\"handleResponseVerify\", oResponse);\r\n    //JSON.parse(oResponse);\r\n    // {\"response\":{\r\n    //   \"captchaPassed\":true,\r\n    //   \"requestCategory\":\"<p>Ссылка для перехода недействительна. Необходимо выполнить повторную регистрацию на ЭТП «Газпромнефть»<\\/p> \\n \",\r\n    //   \"verify\":\"NoVerified\",\r\n    //   \"hasError\":true}}\r\n\r\n    if (oResponse.response.verify === \"NoVerified\") {\r\n      this.setState({\r\n        status: \"tokenFromEmailNotValid\",\r\n        alertText: oResponse.response.requestCategory,\r\n        alertColor: \"error\",\r\n        alertVisible: true,\r\n        hasError: oResponse.response.hasError\r\n      });\r\n    } else if (oResponse.response.verify === \"Verified\") {\r\n      this.setState({\r\n        status: \"tokenFromEmailValid\",\r\n        alertText: oResponse.response.requestCategory,\r\n        alertColor: \"success\",\r\n        alertVisible: true,\r\n        hasError: oResponse.response.hasError\r\n      });\r\n    } else {\r\n      this.setState({\r\n        status: \"error\",\r\n        alertText: \"Error in token verified, unknown response\",\r\n        alertVisible: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  handleClickBack() {\r\n    window.location.assign(\"/NDI_EPCOMMON_D~gzpn~regform~service~rs~gazprom-neft.ru/rs/regform/\");\r\n  }\r\n\r\n  // alert dismiss\r\n  onDismissAlert = () => {\r\n    this.setState({\r\n      alertVisible: !this.state.alertVisible\r\n    });\r\n  }\r\n\r\n  changeLang = () => {\r\n    if (this.state.lang === \"ru\") {\r\n      this.setState({ lang: \"en\" });\r\n      this.updateI18n(\"en\");\r\n      this.getFunctionsInputData(\"en\");\r\n    } else {\r\n      this.setState({ lang: \"ru\" });\r\n      this.updateI18n(\"ru\");\r\n      this.getFunctionsInputData(\"ru\");\r\n    }\r\n  }\r\n\r\n  updateI18n = (lang) => {\r\n    if (window.location.hostname === \"localhost\" || window.location.hostname === \"127.0.0.1\") {\r\n      //LOCAL\r\n      if (lang === \"en\") {\r\n        this.setState({ i18n: i18n_en.register });\r\n      } else {\r\n        this.setState({ i18n: i18n_ru.register });\r\n      }\r\n    } else {\r\n      //SERVER\r\n      this.backend.getI18n(\r\n        \"/NDI_EPCOMMON_D~gzpn~regform~service~rs~gazprom-neft.ru/rs/regform/i18n?lang=\" + lang,\r\n        oI18n => {\r\n          this.setState({ i18n: oI18n.register });\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  getFunctionsInputData = (lang) => {\r\n    if (window.location.hostname === \"localhost\" || window.location.hostname === \"127.0.0.1\") {\r\n      //LOCAL\r\n      //this.setState({ funcData: funcData_ru });\r\n      if (lang === \"en\") {\r\n        this.setState({ funcData: funcData_ru });\r\n      } else {\r\n        this.setState({ funcData: funcData_en });\r\n      }\r\n    } else {\r\n      //SERVER (getI18n подходит для людого запроса на сервер)\r\n      this.backend.getI18n(\r\n        \"/NDI_EPCOMMON_D~gzpn~regform~service~rs~gazprom-neft.ru/rs/regform/function?lang=\"+this.state.lang,\r\n        ofunctionData => {\r\n          this.setState({ funcData: ofunctionData });\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    let i18n = this.state.i18n;\r\n    let funcData = this.state.funcData;\r\n    let content = undefined;\r\n\r\n    switch (this.state.status) {\r\n      case \"error\":\r\n        //content = <RegForm i18n={i18n} onSubmit={this.handleSubmit}/>;\r\n        content = <Button outline color=\"primary\" onClick={this.handleClickBack}>Вернуться к форме регистрации</Button>;\r\n        break;\r\n      case \"success\":\r\n        //content = <RegForm i18n={i18n} onSubmit={this.handleSubmit}/>;\r\n        content = <Button outline color=\"primary\" onClick={this.handleClickBack}>Вернуться к форме регистрации</Button>;\r\n        break;\r\n      case \"oldbrowser\":\r\n        content = this.oldBrowser();\r\n        break;\r\n      // case \"progress\":\r\n      //   content = <ProgressIndicator value={this.state.progress} />;\r\n      //   break;\r\n      case \"tokenFromEmailValid\":\r\n        // переход по ссылке проверки токена - вывод страницы с сообщением\r\n        content = <Button outline color=\"primary\" onClick={this.handleClickBack}>Вернуться к форме регистрации</Button>;\r\n        break;\r\n      case \"tokenFromEmailNotValid\":\r\n        // переход по ссылке проверки токена - вывод страницы с сообщением\r\n        content = <Button outline color=\"primary\" onClick={this.handleClickBack}>Вернуться к форме регистрации</Button>;\r\n        break;\r\n\r\n      case \"RegForm\":\r\n        content = <RegForm i18n={i18n} funcData={funcData} onSubmit={this.handleSubmit} />;\r\n        break;\r\n\r\n      default:\r\n        content = <Spinner color=\"dark\" className=\"spinner\" />;\r\n    }\r\n\r\n    return (\r\n      <div className=\"container\" ref={this.alertRef}>\r\n        <div className=\"pt-3\">\r\n          <img\r\n            className=\"d-block ml-auto mr-0 mb-4\"\r\n            src=\"/NDI_EPCOMMON_D~gzpn~regform~service~rs~gazprom-neft.ru/regform/logo.png\"\r\n            //src=\"../logo.png\"\r\n            alt=\"\"\r\n          />\r\n          <div>\r\n            <button className=\"langbutton\" title={i18n.langTooltip} href=\"javascript:void(null);\" onClick={this.changeLang}>{this.state.lang === \"ru\" ? 'Eng' : 'Rus'}</button>\r\n          </div>\r\n          <h2>{i18n.caption}</h2>\r\n          <div className=\"lead pb-3\" dangerouslySetInnerHTML={{ __html: this.state.headtext }}/>\r\n          <Alert color={this.state.alertColor} isOpen={this.state.alertVisible} toggle={this.onDismissAlert}>\r\n            <h4 className={this.state.httpError ? 'alert-heading' : 'alert-heading hidden'} >{this.state.httpError}</h4>\r\n            <div dangerouslySetInnerHTML={{ __html: this.state.alertText }}/>\r\n          </Alert>\r\n          <div className={this.state.progress < 100 ? 'pt-3 pb-3' : 'pt-3 pb-3 hidden'}>\r\n            <ProgressIndicator value={this.state.progress}/>\r\n          </div>\r\n        </div>\r\n        {content}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RegisterPage;\r\n","import React, { Component } from \"react\";\r\nimport { Spinner } from \"reactstrap\";\r\nimport \"./App.css\";\r\nimport Backend from \"./components/backend\";\r\nimport i18n_ru from \"./i18n_ru.json\";\r\nimport funcData_ru from \"./funcData_ru.json\";\r\nimport RegisterPage from \"./components/_registerpage\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { \r\n      i18n: null,\r\n      lang: \"ru\",\r\n      funcData: null\r\n    };\r\n    this.backend = new Backend();\r\n  }\r\n\r\n  getFunctionsInputData() {\r\n    if (window.location.hostname === \"localhost\" || window.location.hostname === \"127.0.0.1\") {\r\n      //LOCAL\r\n      this.setState({ funcData: funcData_ru });\r\n    } else {\r\n      //SERVER (getI18n подходит для людого запроса на сервер)\r\n      this.backend.getI18n(\r\n        \"/NDI_EPCOMMON_D~gzpn~regform~service~rs~gazprom-neft.ru/rs/regform/function?lang=\"+this.state.lang,\r\n        ofunctionData => {\r\n          this.setState({ funcData: ofunctionData });\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  updateI18n() {\r\n    if (window.location.hostname === \"localhost\" || window.location.hostname === \"127.0.0.1\") {\r\n      //LOCAL\r\n      this.setState({ i18n: i18n_ru });\r\n    } else {\r\n      //SERVER\r\n      this.setState({ i18n: null });\r\n      this.backend.getI18n(\r\n        \"/NDI_EPCOMMON_D~gzpn~regform~service~rs~gazprom-neft.ru/rs/regform/i18n?lang=\"+this.state.lang,\r\n        oI18n => {\r\n          this.setState({ i18n: oI18n });\r\n          document.title = oI18n.register.caption;\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.updateI18n();\r\n    this.getFunctionsInputData();\r\n  }\r\n\r\n\r\n  render() {\r\n    return (this.state.i18n && this.state.funcData) ? (\r\n      <RegisterPage i18n={this.state.i18n.register} funcData={this.state.funcData.functionData} lang={this.state.lang} />\r\n    ) : (\r\n      <Spinner color=\"dark\" className=\"spinner\" />\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import \"react-app-polyfill/ie9\";\nimport \"react-app-polyfill/stable\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}